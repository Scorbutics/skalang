var Log = import "bind:std.native.io.log";
var Parameters = import "bind:std.native.function.parameter";
var PathFcty = import "bind:std.native.io.path";

var ArrayFcty = import "std:std.value.array";

var run = function (parameters: Parameters::Fcty()) {
	if (parameters.size() > 0) {
		var path = PathFcty.Fcty(parameters.asString(0));
		Log.print(path.canonical());

		var all = ArrayFcty.FctyInteger();

		for(var i = 1; i < parameters.size(); i = i + 1) {
			all.add(parameters.asInt(i) + i * i);
		}

		for(var i = 0; i < all.size(); i = i + 1) {
			Log.print(all.get(i));
		}

		Log.print("size : " + all.size());
		
	} else {
		Log.print("No argument provided");
	}
};
