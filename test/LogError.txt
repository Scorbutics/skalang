[00:29:26:462][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:464][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:467][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:26:469][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:26:470][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:471][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:472][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:26:473][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:26:474][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:475][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:476][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:26:480][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:26:481][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:26:482][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:26:483][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:484][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:485][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:26:486][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:26:487][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:26:489][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:26:490][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:26:491][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:26:492][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:26:493][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:495][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:26:496][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:500][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:26:501][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:26:503][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:26:503][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:26:505][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:26:506][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:26:507][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:26:508][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:513][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:26:514][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:516][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:26:517][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:26:519][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:26:522][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:26:523][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:525][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:527][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:528][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:529][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:26:533][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:536][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:26:537][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:26:539][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character179" (Operator VARIABLE_DECLARATION)
[00:29:26:540][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character179" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:26:551][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:554][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:557][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:26:558][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:26:559][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:560][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:562][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:26:566][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:26:568][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:570][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:571][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:26:572][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:26:573][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:26:574][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:26:578][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:580][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:581][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:26:582][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:26:583][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:26:584][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:26:587][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:26:589][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:26:590][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:26:592][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:593][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:26:595][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:599][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:26:600][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:26:602][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:26:603][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:26:604][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:26:605][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:26:608][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:26:610][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:611][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:26:613][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:614][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:26:615][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:26:619][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:26:621][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:26:622][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:624][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:626][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:630][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:633][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:26:634][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:636][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:26:637][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:26:641][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character184" (Operator VARIABLE_DECLARATION)
[00:29:26:643][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character184" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:26:644][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character184" (Operator UNARY)
[00:29:26:645][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character184" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:26:647][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:651][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:26:653][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Player" (Operator LITERAL)
[00:29:26:654][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Player" = "string" (Operator LITERAL)
[00:29:26:655][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:657][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:662][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:664][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:665][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator VARIABLE_DECLARATION)
[00:29:26:667][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:668][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character184" (Operator UNARY)
[00:29:26:669][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character184" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:26:674][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:675][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FIELD_ACCESS)
[00:29:26:676][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator VARIABLE_DECLARATION)
[00:29:26:677][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:678][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator UNARY)
[00:29:26:679][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator UNARY)
[00:29:26:680][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:684][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:26:687][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:689][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:691][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:692][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:696][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:26:697][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:26:699][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:700][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:701][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:26:706][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:26:707][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:708][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:709][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:26:710][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:26:712][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:26:713][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:26:717][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:718][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:720][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:26:721][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:26:722][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:26:723][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:26:725][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:26:729][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:26:730][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:26:732][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:734][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:26:735][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:739][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:26:740][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:26:741][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:26:742][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:26:743][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:26:745][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:26:746][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:26:750][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:752][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:26:753][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:755][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:26:756][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:26:758][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:26:762][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:26:764][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:765][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:767][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:768][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:772][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:26:773][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:775][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:26:776][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:26:777][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:26:778][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:26:780][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:26:783][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:26:786][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:787][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:26:788][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Player" (Operator LITERAL)
[00:29:26:789][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Player" = "string" (Operator LITERAL)
[00:29:26:790][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:794][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:795][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:796][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:797][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator VARIABLE_DECLARATION)
[00:29:26:798][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:800][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:26:801][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:26:805][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:807][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FIELD_ACCESS)
[00:29:26:808][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator VARIABLE_DECLARATION)
[00:29:26:809][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:812][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:26:813][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character_user" (Operator IMPORT)
[00:29:26:818][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser190" (Operator VARIABLE_DECLARATION)
[00:29:26:819][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser190" = "var ../test/src/resources/character_user" (Operator VARIABLE_DECLARATION)
[00:29:26:821][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser190" (Operator UNARY)
[00:29:26:822][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser190" = "var ../test/src/resources/character_user" (Operator UNARY)
[00:29:26:825][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:829][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:26:836][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:838][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:843][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:26:844][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:26:847][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:26:849][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:26:851][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:852][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:26:853][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:26:854][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:26:855][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:856][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:860][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:26:862][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:26:863][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:26:864][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:26:866][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:26:867][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:26:870][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:26:872][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:26:873][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:26:875][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:26:877][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:26:880][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:26:883][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:26:884][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:886][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:26:887][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:26:901][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:26:902][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:26:904][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:26:906][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:26:907][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:26:911][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:26:913][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:26:914][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:924][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:26:925][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:26:934][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:26:938][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:26:939][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:26:940][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:26:941][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:944][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:946][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:26:950][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:26:956][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:26:959][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:26:961][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:26:963][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:26:973][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:26:975][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:26:977][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:26:979][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:26:988][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:26:989][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:26:991][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Player" (Operator LITERAL)
[00:29:26:993][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Player" = "string" (Operator LITERAL)
[00:29:26:994][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:26:999][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:001][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:003][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:004][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator VARIABLE_DECLARATION)
[00:29:27:005][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:014][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:017][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:27:019][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:020][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FIELD_ACCESS)
[00:29:27:028][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator VARIABLE_DECLARATION)
[00:29:27:031][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:044][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:048][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character_user" (Operator IMPORT)
[00:29:27:051][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser196" (Operator VARIABLE_DECLARATION)
[00:29:27:052][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser196" = "var ../test/src/resources/character_user" (Operator VARIABLE_DECLARATION)
[00:29:27:054][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser196" (Operator UNARY)
[00:29:27:055][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser196" = "var ../test/src/resources/character_user" (Operator UNARY)
[00:29:27:061][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:064][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:27:068][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:070][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:073][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:074][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:079][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:27:081][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:27:083][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:084][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:086][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:27:088][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:27:092][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:094][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:097][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:27:098][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:27:099][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:27:102][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:27:104][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:105][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:107][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:27:108][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:27:112][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:27:114][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:27:116][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:27:117][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:27:119][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:27:120][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:125][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:27:126][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:129][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:27:130][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:27:135][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:27:137][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:27:138][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:27:140][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:27:142][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:27:145][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:147][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:27:149][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:151][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:27:152][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:27:153][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:27:157][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:27:158][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:160][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:162][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:163][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:167][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:27:169][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:171][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:172][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/custom_base" (Operator IMPORT)
[00:29:27:174][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:27:175][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/custom_base" (Operator VARIABLE_DECLARATION)
[00:29:27:180][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:181][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/custom_base" (Operator UNARY)
[00:29:27:183][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:185][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:27:187][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Player" (Operator LITERAL)
[00:29:27:191][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Player" = "string" (Operator LITERAL)
[00:29:27:193][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:194][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:196][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:200][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:202][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator VARIABLE_DECLARATION)
[00:29:27:203][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:204][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:206][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/custom_base" (Operator UNARY)
[00:29:27:208][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:211][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FIELD_ACCESS)
[00:29:27:213][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator VARIABLE_DECLARATION)
[00:29:27:215][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:216][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:27:218][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:27:219][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totalAge" (Operator VARIABLE_DECLARATION)
[00:29:27:223][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totalAge" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:225][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:27:226][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:27:228][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator VARIABLE_DECLARATION)
[00:29:27:230][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:234][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:27:235][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:27:236][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator UNARY)
[00:29:27:237][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator UNARY)
[00:29:27:238][Debug](  TypeBuilder.cpp l.0055) Building type for expression "<" (Operator BINARY)
[00:29:27:239][Info ](  TypeBuilder.cpp l.0057) Type built for expression "<" = "bool" (Operator BINARY)
[00:29:27:240][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:27:241][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:27:245][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:27:248][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:27:249][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:27:250][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:27:252][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:27:255][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:257][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:27:258][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:260][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totalAge" (Operator UNARY)
[00:29:27:261][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totalAge" = "int" (Operator UNARY)
[00:29:27:263][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totalAge" (Operator UNARY)
[00:29:27:266][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totalAge" = "int" (Operator UNARY)
[00:29:27:268][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:27:269][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:27:270][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:27:271][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:273][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:27:274][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:277][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totalAge" (Operator UNARY)
[00:29:27:279][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totalAge" = "int" (Operator UNARY)
[00:29:27:280][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totalAge" (Operator UNARY)
[00:29:27:281][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totalAge" = "int" (Operator UNARY)
[00:29:27:283][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator UNARY)
[00:29:27:284][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator UNARY)
[00:29:27:285][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator UNARY)
[00:29:27:289][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator UNARY)
[00:29:27:290][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:27:292][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:27:293][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:27:295][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:299][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:27:300][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:302][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:303][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/custom" (Operator IMPORT)
[00:29:27:304][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Custom202" (Operator VARIABLE_DECLARATION)
[00:29:27:306][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Custom202" = "var ../test/src/resources/custom" (Operator VARIABLE_DECLARATION)
[00:29:27:311][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Custom202" (Operator UNARY)
[00:29:27:314][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Custom202" = "var ../test/src/resources/custom" (Operator UNARY)
[00:29:27:316][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:317][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:27:327][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:328][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:332][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:333][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:336][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:27:337][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:27:338][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:342][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:343][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:27:345][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:27:346][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:347][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:349][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:27:352][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:27:353][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:27:354][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:27:355][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:356][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:357][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:27:358][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:27:359][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:27:363][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:27:365][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:27:366][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:27:368][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:27:369][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:370][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:27:374][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:376][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:27:377][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:27:378][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:27:379][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:27:381][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:27:381][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:27:386][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:27:387][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:389][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:27:390][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:392][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:27:397][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:27:398][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:27:399][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:27:401][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:402][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:404][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:408][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:409][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:27:410][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:412][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:413][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:27:415][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:27:418][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:27:421][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:423][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:27:427][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:431][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:27:433][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Player" (Operator LITERAL)
[00:29:27:434][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Player" = "string" (Operator LITERAL)
[00:29:27:435][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:437][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:441][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:442][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:444][Debug](  TypeBuilder.cpp l.0023) Building type for variable "player" (Operator VARIABLE_DECLARATION)
[00:29:27:445][Info ](  TypeBuilder.cpp l.0025) Type built for variable "player" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:447][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:449][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:27:455][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:456][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FIELD_ACCESS)
[00:29:27:458][Debug](  TypeBuilder.cpp l.0023) Building type for variable "enemy" (Operator VARIABLE_DECLARATION)
[00:29:27:459][Info ](  TypeBuilder.cpp l.0025) Type built for variable "enemy" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:461][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:464][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character_user" (Operator IMPORT)
[00:29:27:465][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser208" (Operator VARIABLE_DECLARATION)
[00:29:27:467][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser208" = "var ../test/src/resources/character_user" (Operator VARIABLE_DECLARATION)
[00:29:27:469][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser208" (Operator UNARY)
[00:29:27:470][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser208" = "var ../test/src/resources/character_user" (Operator UNARY)
[00:29:27:471][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:27:476][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:27:477][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:27:478][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:480][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:27:481][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:27:482][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:483][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:487][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:488][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character_user" (Operator IMPORT)
[00:29:27:491][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser2" (Operator VARIABLE_DECLARATION)
[00:29:27:492][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser2" = "var ../test/src/resources/character_user" (Operator VARIABLE_DECLARATION)
[00:29:27:494][Debug](  TypeBuilder.cpp l.0023) Building type for variable "CharacterUser2" (Operator UNARY)
[00:29:27:497][Info ](  TypeBuilder.cpp l.0025) Type built for variable "CharacterUser2" = "var ../test/src/resources/character_user" (Operator UNARY)
[00:29:27:500][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:501][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:27:509][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:510][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:514][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:515][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:522][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:27:523][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:27:524][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:526][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:532][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:27:533][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:27:535][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:537][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:540][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:27:542][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:27:543][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:27:545][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:27:547][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:27:548][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:27:551][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:27:553][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:27:554][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:27:555][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:27:557][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:27:558][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:27:562][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:27:564][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:566][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:27:568][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:27:569][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:27:573][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:27:576][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:27:577][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:27:578][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:27:580][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:27:584][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:27:586][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:587][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:27:589][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:27:591][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:27:592][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:27:597][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:27:599][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:27:600][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:602][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:604][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:609][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:612][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:27:613][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:616][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:619][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:27:621][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:27:622][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:27:624][Debug](  TypeBuilder.cpp l.0023) Building type for variable "ch" (Operator PARAMETER_DECLARATION)
[00:29:27:625][Info ](  TypeBuilder.cpp l.0025) Type built for variable "ch" = "var build" (Operator PARAMETER_DECLARATION)
[00:29:27:627][Debug](  TypeBuilder.cpp l.0023) Building type for variable "run" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:631][Info ](  TypeBuilder.cpp l.0025) Type built for variable "run" = "function run (var build - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:633][Debug](  TypeBuilder.cpp l.0023) Building type for variable "ch" (Operator UNARY)
[00:29:27:634][Info ](  TypeBuilder.cpp l.0025) Type built for variable "ch" = "var build" (Operator UNARY)
[00:29:27:635][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:636][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:27:637][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "run" (Operator FUNCTION_DECLARATION)
[00:29:27:642][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "run" = "function run (var build - void)" (Operator FUNCTION_DECLARATION)
[00:29:27:644][Debug](  TypeBuilder.cpp l.0055) Building type for expression "run" (Operator FUNCTION_DECLARATION)
[00:29:27:645][Info ](  TypeBuilder.cpp l.0057) Type built for expression "run" = "function run (var build - void)" (Operator FUNCTION_DECLARATION)
[00:29:27:646][Debug](  TypeBuilder.cpp l.0023) Building type for variable "run" (Operator VARIABLE_DECLARATION)
[00:29:27:648][Info ](  TypeBuilder.cpp l.0025) Type built for variable "run" = "function run (var build - void)" (Operator VARIABLE_DECLARATION)
[00:29:27:652][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:653][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/play" (Operator IMPORT)
[00:29:27:654][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Player" (Operator VARIABLE_DECLARATION)
[00:29:27:655][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Player" = "var ../test/src/resources/play" (Operator VARIABLE_DECLARATION)
[00:29:27:657][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:659][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:27:667][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:27:668][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:27:670][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:27:675][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:27:677][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:27:678][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:27:680][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:681][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:27:683][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test" (Operator LITERAL)
[00:29:27:686][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test" = "string" (Operator LITERAL)
[00:29:27:688][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:689][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:690][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:692][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:27:693][Debug](  TypeBuilder.cpp l.0023) Building type for variable "c" (Operator VARIABLE_DECLARATION)
[00:29:27:697][Info ](  TypeBuilder.cpp l.0025) Type built for variable "c" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:27:698][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Player" (Operator UNARY)
[00:29:27:699][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Player" = "var ../test/src/resources/play" (Operator UNARY)
[00:29:27:701][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:702][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function run (var build - void)" (Operator FIELD_ACCESS)
[00:29:27:703][Debug](  TypeBuilder.cpp l.0023) Building type for variable "c" (Operator UNARY)
[00:29:27:704][Info ](  TypeBuilder.cpp l.0025) Type built for variable "c" = "var build" (Operator UNARY)
[00:29:27:708][Debug](  TypeBuilder.cpp l.0055) Building type for expression "c" (Operator UNARY)
[00:29:27:709][Info ](  TypeBuilder.cpp l.0057) Type built for expression "c" = "var build" (Operator UNARY)
[00:29:27:710][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:712][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:27:713][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:714][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:27:718][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:719][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:27:721][Debug](  TypeBuilder.cpp l.0023) Building type for variable "01" (Operator PARAMETER_DECLARATION)
[00:29:27:722][Info ](  TypeBuilder.cpp l.0025) Type built for variable "01" = "string 01" (Operator PARAMETER_DECLARATION)
[00:29:27:723][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:725][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - string 01 - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:726][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:27:731][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - string 01 - int)" (Operator FUNCTION_DECLARATION)
[00:29:27:732][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:27:733][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - string 01 - int)" (Operator VARIABLE_DECLARATION)
[00:29:27:735][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:736][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding.miniska" (Operator SCRIPT_LINK)
[00:29:27:737][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:27:742][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding.miniska" (Operator SCRIPT_LINK)
[00:29:27:745][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User218" (Operator VARIABLE_DECLARATION)
[00:29:27:747][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User218" = "var binding.miniska" (Operator VARIABLE_DECLARATION)
[00:29:27:753][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User218" (Operator UNARY)
[00:29:27:754][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User218" = "var binding.miniska" (Operator UNARY)
[00:29:27:756][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:757][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - string 01 - int)" (Operator FIELD_ACCESS)
[00:29:27:758][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:27:759][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:27:763][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titito" (Operator LITERAL)
[00:29:27:764][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titito" = "string" (Operator LITERAL)
[00:29:27:765][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:767][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:27:768][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:769][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:27:772][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:774][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:27:776][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:778][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:780][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:27:781][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - int)" (Operator FUNCTION_DECLARATION)
[00:29:27:785][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:786][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:27:788][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest2" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:789][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest2" = "function funcTest2 (string 0 - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:790][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest2" (Operator FUNCTION_DECLARATION)
[00:29:27:793][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest2" = "function funcTest2 (string 0 - int)" (Operator FUNCTION_DECLARATION)
[00:29:27:798][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:27:800][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - int)" (Operator VARIABLE_DECLARATION)
[00:29:27:803][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest2" (Operator VARIABLE_DECLARATION)
[00:29:27:808][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest2" = "function funcTest2 (string 0 - int)" (Operator VARIABLE_DECLARATION)
[00:29:27:812][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:815][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding239.miniska" (Operator SCRIPT_LINK)
[00:29:27:824][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:27:825][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding239.miniska" (Operator SCRIPT_LINK)
[00:29:27:826][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User239" (Operator VARIABLE_DECLARATION)
[00:29:27:828][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User239" = "var binding239.miniska" (Operator VARIABLE_DECLARATION)
[00:29:27:829][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User239" (Operator UNARY)
[00:29:27:834][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User239" = "var binding239.miniska" (Operator UNARY)
[00:29:27:837][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:838][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - int)" (Operator FIELD_ACCESS)
[00:29:27:840][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:27:843][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:27:845][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:847][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:27:849][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:850][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:27:851][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User239" (Operator UNARY)
[00:29:27:854][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User239" = "var binding239.miniska" (Operator UNARY)
[00:29:27:856][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:857][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest2 (string 0 - int)" (Operator FIELD_ACCESS)
[00:29:27:860][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titito" (Operator LITERAL)
[00:29:27:861][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titito" = "string" (Operator LITERAL)
[00:29:27:865][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:866][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:27:867][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:868][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:27:872][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:875][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:27:877][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:878][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:880][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "DataClass" (Operator FUNCTION_DECLARATION)
[00:29:27:881][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_DECLARATION)
[00:29:27:883][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator VARIABLE_DECLARATION)
[00:29:27:886][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator VARIABLE_DECLARATION)
[00:29:27:889][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:890][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:27:891][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassScript" (Operator VARIABLE_DECLARATION)
[00:29:27:893][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassScript" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:27:898][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:899][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "var DataClass" (Operator PARAMETER_DECLARATION)
[00:29:27:901][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:902][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:904][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:27:908][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_DECLARATION)
[00:29:27:910][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:27:911][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator VARIABLE_DECLARATION)
[00:29:27:913][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:914][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding295.miniska" (Operator SCRIPT_LINK)
[00:29:27:915][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:27:919][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding295.miniska" (Operator SCRIPT_LINK)
[00:29:27:920][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User295" (Operator VARIABLE_DECLARATION)
[00:29:27:921][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User295" = "var binding295.miniska" (Operator VARIABLE_DECLARATION)
[00:29:27:922][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:923][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:27:925][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:27:926][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:27:930][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp" (Operator VARIABLE_DECLARATION)
[00:29:27:931][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:27:933][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp" (Operator UNARY)
[00:29:27:934][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp" = "var dataclass_script.miniska" (Operator UNARY)
[00:29:27:935][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:936][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function DataClass (string 0 - var DataClass)" (Operator FIELD_ACCESS)
[00:29:27:941][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JeanMi" (Operator LITERAL)
[00:29:27:942][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JeanMi" = "string" (Operator LITERAL)
[00:29:27:943][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:945][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var DataClass" (Operator FUNCTION_CALL)
[00:29:27:947][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:948][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var DataClass" (Operator FUNCTION_CALL)
[00:29:27:951][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator VARIABLE_DECLARATION)
[00:29:27:952][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "var DataClass" (Operator VARIABLE_DECLARATION)
[00:29:27:954][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User295" (Operator UNARY)
[00:29:27:955][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User295" = "var binding295.miniska" (Operator UNARY)
[00:29:27:956][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:27:957][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (var DataClass - void)" (Operator FIELD_ACCESS)
[00:29:27:959][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator UNARY)
[00:29:27:963][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "var DataClass" (Operator UNARY)
[00:29:27:965][Debug](  TypeBuilder.cpp l.0055) Building type for expression "data" (Operator UNARY)
[00:29:27:966][Info ](  TypeBuilder.cpp l.0057) Type built for expression "data" = "var DataClass" (Operator UNARY)
[00:29:27:969][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:27:973][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:27:975][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:27:976][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:27:980][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:27:982][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:27:984][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:986][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:27:987][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "DataClass" (Operator FUNCTION_DECLARATION)
[00:29:27:989][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_DECLARATION)
[00:29:27:990][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator VARIABLE_DECLARATION)
[00:29:27:994][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator VARIABLE_DECLARATION)
[00:29:27:997][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:27:998][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:27:999][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:000][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:002][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp169" (Operator VARIABLE_DECLARATION)
[00:29:28:007][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp169" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:009][Debug](  TypeBuilder.cpp l.0023) Building type for variable "dummy" (Operator PARAMETER_DECLARATION)
[00:29:28:010][Info ](  TypeBuilder.cpp l.0025) Type built for variable "dummy" = "var DataClass" (Operator PARAMETER_DECLARATION)
[00:29:28:011][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:013][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:017][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:28:019][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_DECLARATION)
[00:29:28:021][Debug](  TypeBuilder.cpp l.0055) Building type for expression "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:28:022][Info ](  TypeBuilder.cpp l.0057) Type built for expression "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_DECLARATION)
[00:29:28:023][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:28:024][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator VARIABLE_DECLARATION)
[00:29:28:029][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp169" (Operator UNARY)
[00:29:28:030][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp169" = "var dataclass_script.miniska" (Operator UNARY)
[00:29:28:033][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:28:034][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function DataClass (string 0 - var DataClass)" (Operator FIELD_ACCESS)
[00:29:28:036][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JeanMi" (Operator LITERAL)
[00:29:28:039][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JeanMi" = "string" (Operator LITERAL)
[00:29:28:041][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:28:042][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var DataClass" (Operator FUNCTION_CALL)
[00:29:28:044][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:28:045][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var DataClass" (Operator FUNCTION_CALL)
[00:29:28:046][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator VARIABLE_DECLARATION)
[00:29:28:049][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "var DataClass" (Operator VARIABLE_DECLARATION)
[00:29:28:050][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator UNARY)
[00:29:28:051][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator UNARY)
[00:29:28:053][Debug](  TypeBuilder.cpp l.0055) Building type for expression "funcTest" (Operator UNARY)
[00:29:28:054][Info ](  TypeBuilder.cpp l.0057) Type built for expression "funcTest" = "function funcTest (var DataClass - void)" (Operator UNARY)
[00:29:28:055][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator UNARY)
[00:29:28:056][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "var DataClass" (Operator UNARY)
[00:29:28:059][Debug](  TypeBuilder.cpp l.0055) Building type for expression "data" (Operator UNARY)
[00:29:28:061][Info ](  TypeBuilder.cpp l.0057) Type built for expression "data" = "var DataClass" (Operator UNARY)
[00:29:28:064][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:28:065][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:28:066][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:28:070][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:28:073][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:28:074][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:28:076][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:078][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:081][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "DataClass" (Operator FUNCTION_DECLARATION)
[00:29:28:083][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_DECLARATION)
[00:29:28:084][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator VARIABLE_DECLARATION)
[00:29:28:085][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator VARIABLE_DECLARATION)
[00:29:28:086][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:087][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:089][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:093][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:095][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp194" (Operator VARIABLE_DECLARATION)
[00:29:28:097][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp194" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:098][Debug](  TypeBuilder.cpp l.0023) Building type for variable "dummy" (Operator PARAMETER_DECLARATION)
[00:29:28:099][Info ](  TypeBuilder.cpp l.0025) Type built for variable "dummy" = "var DataClass" (Operator PARAMETER_DECLARATION)
[00:29:28:102][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:104][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (var DataClass - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:105][Debug](  TypeBuilder.cpp l.0023) Building type for variable "dummy" (Operator UNARY)
[00:29:28:106][Info ](  TypeBuilder.cpp l.0025) Type built for variable "dummy" = "var DataClass" (Operator UNARY)
[00:29:28:107][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:28:113][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:28:113][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:28:115][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:117][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:118][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "DataClass" (Operator FUNCTION_DECLARATION)
[00:29:28:120][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_DECLARATION)
[00:29:28:123][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator VARIABLE_DECLARATION)
[00:29:28:125][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator VARIABLE_DECLARATION)
[00:29:28:127][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:128][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:129][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:130][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:135][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp222" (Operator VARIABLE_DECLARATION)
[00:29:28:137][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp222" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:139][Debug](  TypeBuilder.cpp l.0023) Building type for variable "dummy" (Operator PARAMETER_DECLARATION)
[00:29:28:143][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:28:145][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "string 0" (Operator PARAMETER_DECLARATION)
[00:29:28:147][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:149][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:150][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "DataClass" (Operator FUNCTION_DECLARATION)
[00:29:28:152][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator FUNCTION_DECLARATION)
[00:29:28:155][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClass" (Operator VARIABLE_DECLARATION)
[00:29:28:157][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClass" = "function DataClass (string 0 - var DataClass)" (Operator VARIABLE_DECLARATION)
[00:29:28:158][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:159][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:161][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:162][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:167][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp250" (Operator VARIABLE_DECLARATION)
[00:29:28:168][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp250" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:169][Debug](  TypeBuilder.cpp l.0023) Building type for variable "dummy" (Operator PARAMETER_DECLARATION)
[00:29:28:173][Debug](  TypeBuilder.cpp l.0023) Building type for variable "getToto" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:174][Info ](  TypeBuilder.cpp l.0025) Type built for variable "getToto" = "function getToto (string)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:178][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "getToto" (Operator FUNCTION_DECLARATION)
[00:29:28:180][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "getToto" = "function getToto (string)" (Operator FUNCTION_DECLARATION)
[00:29:28:181][Debug](  TypeBuilder.cpp l.0023) Building type for variable "getToto" (Operator VARIABLE_DECLARATION)
[00:29:28:182][Info ](  TypeBuilder.cpp l.0025) Type built for variable "getToto" = "function getToto (string)" (Operator VARIABLE_DECLARATION)
[00:29:28:183][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:187][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:28:189][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:190][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding1_lib.miniska" (Operator SCRIPT_LINK)
[00:29:28:191][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:192][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding1_lib.miniska" (Operator SCRIPT_LINK)
[00:29:28:193][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Binding1" (Operator VARIABLE_DECLARATION)
[00:29:28:195][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Binding1" = "var binding1_lib.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:199][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Fcty" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:201][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Fcty" = "function Fcty (var Fcty)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:202][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Binding1" (Operator UNARY)
[00:29:28:204][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Binding1" = "var binding1_lib.miniska" (Operator UNARY)
[00:29:28:205][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:28:208][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function getToto (string)" (Operator FIELD_ACCESS)
[00:29:28:210][Debug](  TypeBuilder.cpp l.0023) Building type for variable "getToto" (Operator VARIABLE_DECLARATION)
[00:29:28:211][Info ](  TypeBuilder.cpp l.0025) Type built for variable "getToto" = "function getToto (string)" (Operator VARIABLE_DECLARATION)
[00:29:28:212][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Fcty" (Operator FUNCTION_DECLARATION)
[00:29:28:213][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Fcty" = "function Fcty (var Fcty)" (Operator FUNCTION_DECLARATION)
[00:29:28:215][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Fcty" (Operator FUNCTION_DECLARATION)
[00:29:28:216][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Fcty" = "function Fcty (var Fcty)" (Operator FUNCTION_DECLARATION)
[00:29:28:220][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Fcty" (Operator VARIABLE_DECLARATION)
[00:29:28:221][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Fcty" = "function Fcty (var Fcty)" (Operator VARIABLE_DECLARATION)
[00:29:28:223][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Test293" (Operator VARIABLE_DECLARATION)
[00:29:28:224][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Test293" = "var ../test/src/resources/test293" (Operator VARIABLE_DECLARATION)
[00:29:28:226][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:230][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding1_lib.miniska" (Operator SCRIPT_LINK)
[00:29:28:232][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Binding1" (Operator VARIABLE_DECLARATION)
[00:29:28:233][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Binding1" = "var binding1_lib.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:235][Debug](  TypeBuilder.cpp l.0023) Building type for variable "run" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:237][Info ](  TypeBuilder.cpp l.0025) Type built for variable "run" = "function run (var Fcty)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:28:238][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "run" (Operator FUNCTION_DECLARATION)
[00:29:28:242][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "run" = "function run (var Fcty)" (Operator FUNCTION_DECLARATION)
[00:29:28:244][Debug](  TypeBuilder.cpp l.0023) Building type for variable "run" (Operator VARIABLE_DECLARATION)
[00:29:28:245][Info ](  TypeBuilder.cpp l.0025) Type built for variable "run" = "function run (var Fcty)" (Operator VARIABLE_DECLARATION)
[00:29:28:247][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:28:248][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:249][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:28:253][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var dataclass_script.miniska" (Operator SCRIPT_LINK)
[00:29:28:254][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp280" (Operator VARIABLE_DECLARATION)
[00:29:28:255][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp280" = "var dataclass_script.miniska" (Operator VARIABLE_DECLARATION)
[00:29:28:257][Debug](  TypeBuilder.cpp l.0023) Building type for variable "DataClassImp280" (Operator UNARY)
[00:29:28:258][Info ](  TypeBuilder.cpp l.0025) Type built for variable "DataClassImp280" = "var dataclass_script.miniska" (Operator UNARY)
[00:29:28:259][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:28:260][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function run (var Fcty)" (Operator FIELD_ACCESS)
[00:29:28:265][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:28:266][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Fcty" (Operator FUNCTION_CALL)
[00:29:28:267][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:28:268][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function getToto (string)" (Operator FIELD_ACCESS)
[00:29:28:270][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:28:271][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "string" (Operator FUNCTION_CALL)
[00:29:28:273][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:28:277][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string" (Operator FUNCTION_CALL)
[00:29:39:179][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:39:181][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:39:183][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:184][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:186][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:39:188][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_DECLARATION)
[00:29:39:192][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:39:193][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator VARIABLE_DECLARATION)
[00:29:39:195][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:196][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding264.miniska" (Operator SCRIPT_LINK)
[00:29:39:197][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:198][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding264.miniska" (Operator SCRIPT_LINK)
[00:29:39:202][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User264" (Operator VARIABLE_DECLARATION)
[00:29:39:204][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User264" = "var binding264.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:205][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User264" (Operator UNARY)
[00:29:39:206][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User264" = "var binding264.miniska" (Operator UNARY)
[00:29:39:207][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:208][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:210][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:39:215][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:39:216][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:217][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:219][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:220][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:223][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:39:225][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:39:227][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:230][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:232][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:39:236][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_DECLARATION)
[00:29:39:238][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:39:240][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator VARIABLE_DECLARATION)
[00:29:39:241][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:242][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding279.miniska" (Operator SCRIPT_LINK)
[00:29:39:246][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:247][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding279.miniska" (Operator SCRIPT_LINK)
[00:29:39:249][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User279" (Operator VARIABLE_DECLARATION)
[00:29:39:250][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User279" = "var binding279.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:251][Debug](  TypeBuilder.cpp l.0023) Building type for variable "User279" (Operator UNARY)
[00:29:39:252][Info ](  TypeBuilder.cpp l.0025) Type built for variable "User279" = "var binding279.miniska" (Operator UNARY)
[00:29:39:254][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:258][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:259][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:39:260][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:39:262][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:263][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:265][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:268][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:271][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:39:272][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:39:273][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:275][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:279][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:39:281][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_DECLARATION)
[00:29:39:282][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:39:283][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator VARIABLE_DECLARATION)
[00:29:39:284][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:285][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:39:296][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:299][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:300][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:302][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:303][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator VARIABLE_DECLARATION)
[00:29:39:304][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:306][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator UNARY)
[00:29:39:309][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator UNARY)
[00:29:39:311][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:312][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:313][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:314][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:316][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:317][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:321][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:322][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:324][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:39:324][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/bridge_user" (Operator IMPORT)
[00:29:39:326][Debug](  TypeBuilder.cpp l.0023) Building type for variable "BridgeScript" (Operator VARIABLE_DECLARATION)
[00:29:39:327][Info ](  TypeBuilder.cpp l.0025) Type built for variable "BridgeScript" = "var ../test/src/resources/bridge_user" (Operator VARIABLE_DECLARATION)
[00:29:39:331][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:332][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:39:341][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:343][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:346][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:347][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:348][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator VARIABLE_DECLARATION)
[00:29:39:351][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:352][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator UNARY)
[00:29:39:354][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator UNARY)
[00:29:39:355][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:356][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:357][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:39:358][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:39:362][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:364][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:365][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:366][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:368][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:39:369][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/bridge_user2" (Operator IMPORT)
[00:29:39:373][Debug](  TypeBuilder.cpp l.0023) Building type for variable "BridgeScript2" (Operator VARIABLE_DECLARATION)
[00:29:39:374][Info ](  TypeBuilder.cpp l.0025) Type built for variable "BridgeScript2" = "var ../test/src/resources/bridge_user2" (Operator VARIABLE_DECLARATION)
[00:29:39:379][Debug](  TypeBuilder.cpp l.0023) Building type for variable "0" (Operator PARAMETER_DECLARATION)
[00:29:39:382][Info ](  TypeBuilder.cpp l.0025) Type built for variable "0" = "int 0" (Operator PARAMETER_DECLARATION)
[00:29:39:384][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:385][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:39:387][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "funcTest" (Operator FUNCTION_DECLARATION)
[00:29:39:389][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "funcTest" = "function funcTest (int 0 - void)" (Operator FUNCTION_DECLARATION)
[00:29:39:393][Debug](  TypeBuilder.cpp l.0023) Building type for variable "funcTest" (Operator VARIABLE_DECLARATION)
[00:29:39:394][Info ](  TypeBuilder.cpp l.0025) Type built for variable "funcTest" = "function funcTest (int 0 - void)" (Operator VARIABLE_DECLARATION)
[00:29:39:397][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:398][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:39:399][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:400][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:404][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:406][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:408][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator VARIABLE_DECLARATION)
[00:29:39:409][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:411][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator UNARY)
[00:29:39:414][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator UNARY)
[00:29:39:416][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:417][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:419][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:39:420][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:39:421][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:422][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:426][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:428][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:429][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:39:430][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/bridge_user2" (Operator IMPORT)
[00:29:39:432][Debug](  TypeBuilder.cpp l.0023) Building type for variable "BridgeScript2" (Operator VARIABLE_DECLARATION)
[00:29:39:433][Info ](  TypeBuilder.cpp l.0025) Type built for variable "BridgeScript2" = "var ../test/src/resources/bridge_user2" (Operator VARIABLE_DECLARATION)
[00:29:39:437][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:438][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:39:442][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:444][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:39:447][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:39:448][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:450][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator SCRIPT_LINK)
[00:29:39:451][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var binding322.miniska" (Operator SCRIPT_LINK)
[00:29:39:452][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator VARIABLE_DECLARATION)
[00:29:39:453][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator VARIABLE_DECLARATION)
[00:29:39:454][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Bridge" (Operator UNARY)
[00:29:39:458][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Bridge" = "var binding322.miniska" (Operator UNARY)
[00:29:39:460][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:461][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:462][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:463][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:464][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:466][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:469][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:470][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:472][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:39:473][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function funcTest (int 0 - void)" (Operator FIELD_ACCESS)
[00:29:39:474][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:475][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:477][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:39:480][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:39:481][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:39:482][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:39:484][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:39:485][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/bridge_user3" (Operator IMPORT)
[00:29:39:486][Debug](  TypeBuilder.cpp l.0023) Building type for variable "BridgeScript3" (Operator VARIABLE_DECLARATION)
[00:29:39:488][Info ](  TypeBuilder.cpp l.0025) Type built for variable "BridgeScript3" = "var ../test/src/resources/bridge_user3" (Operator VARIABLE_DECLARATION)
[00:29:39:494][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:495][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:39:499][Debug](  TypeBuilder.cpp l.0055) Building type for expression "4" (Operator LITERAL)
[00:29:39:501][Info ](  TypeBuilder.cpp l.0057) Type built for expression "4" = "int" (Operator LITERAL)
[00:29:39:502][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:503][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:504][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:505][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:507][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:508][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:511][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:512][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:513][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:514][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:39:517][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:39:518][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:39:520][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:521][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:522][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:524][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:525][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:526][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:529][Debug](  TypeBuilder.cpp l.0055) Building type for expression "4" (Operator LITERAL)
[00:29:39:531][Info ](  TypeBuilder.cpp l.0057) Type built for expression "4" = "int" (Operator LITERAL)
[00:29:39:532][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:533][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:534][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:535][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:537][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:538][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:540][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:542][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:543][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:39:544][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:39:545][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:546][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:547][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:548][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:553][Debug](  TypeBuilder.cpp l.0055) Building type for expression "4" (Operator LITERAL)
[00:29:39:554][Info ](  TypeBuilder.cpp l.0057) Type built for expression "4" = "int" (Operator LITERAL)
[00:29:39:555][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:556][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:557][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:559][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:562][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:564][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:565][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:566][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:568][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:569][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:570][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:39:573][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "int" (Operator BINARY)
[00:29:39:574][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:575][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:576][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:577][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:580][Debug](  TypeBuilder.cpp l.0055) Building type for expression "ti" (Operator LITERAL)
[00:29:39:581][Info ](  TypeBuilder.cpp l.0057) Type built for expression "ti" = "string" (Operator LITERAL)
[00:29:39:585][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:586][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:39:587][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:589][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:590][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:592][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:39:596][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:597][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:599][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:600][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:601][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:39:603][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "string" (Operator BINARY)
[00:29:39:606][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:607][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "string" (Operator VARIABLE_AFFECTATION)
[00:29:39:608][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:610][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string" (Operator VARIABLE_AFFECTATION)
[00:29:39:613][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:617][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "string" (Operator BINARY)
[00:29:39:618][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:619][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:39:621][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:622][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:623][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:626][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:39:630][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:631][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "string" (Operator BINARY)
[00:29:39:632][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:634][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:39:637][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:638][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:639][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:640][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:39:643][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:644][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "string" (Operator BINARY)
[00:29:39:647][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:648][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:39:649][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:650][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:651][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:653][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:39:656][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:39:657][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:39:658][Debug](  TypeBuilder.cpp l.0023) Building type for variable "tititi" (Operator VARIABLE_DECLARATION)
[00:29:39:660][Info ](  TypeBuilder.cpp l.0025) Type built for variable "tititi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:661][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:39:662][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:39:663][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator VARIABLE_DECLARATION)
[00:29:39:664][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:667][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:39:668][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:39:669][Debug](  TypeBuilder.cpp l.0055) Building type for expression "<" (Operator BINARY)
[00:29:39:670][Info ](  TypeBuilder.cpp l.0057) Type built for expression "<" = "bool" (Operator BINARY)
[00:29:39:672][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:39:673][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:39:674][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:39:677][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:39:678][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:681][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:39:682][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:683][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:684][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:688][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:689][Debug](  TypeBuilder.cpp l.0023) Building type for variable "tititi" (Operator UNARY)
[00:29:39:690][Info ](  TypeBuilder.cpp l.0025) Type built for variable "tititi" = "int" (Operator UNARY)
[00:29:39:692][Debug](  TypeBuilder.cpp l.0023) Building type for variable "tititi" (Operator UNARY)
[00:29:39:693][Info ](  TypeBuilder.cpp l.0025) Type built for variable "tititi" = "int" (Operator UNARY)
[00:29:39:695][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:39:698][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:39:699][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:700][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:39:702][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:703][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:704][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:705][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:708][Debug](  TypeBuilder.cpp l.0023) Building type for variable "tititi" (Operator UNARY)
[00:29:39:709][Info ](  TypeBuilder.cpp l.0025) Type built for variable "tititi" = "int" (Operator UNARY)
[00:29:39:710][Debug](  TypeBuilder.cpp l.0055) Building type for expression "tititi" (Operator UNARY)
[00:29:39:711][Info ](  TypeBuilder.cpp l.0057) Type built for expression "tititi" = "int" (Operator UNARY)
[00:29:39:716][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:718][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:719][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:720][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:721][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:722][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:723][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:39:724][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:39:725][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:729][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:730][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:39:732][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:39:733][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:734][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:735][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:736][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:739][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:740][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:741][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:742][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:746][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:748][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:749][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:750][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:752][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:753][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:754][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:39:755][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:39:756][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:759][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:760][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:39:761][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:39:762][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:763][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:764][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:765][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:768][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:769][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:770][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:771][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:775][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:39:775][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:39:778][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:779][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:781][Debug](  TypeBuilder.cpp l.0055) Building type for expression "true" (Operator LITERAL)
[00:29:39:782][Info ](  TypeBuilder.cpp l.0057) Type built for expression "true" = "bool" (Operator LITERAL)
[00:29:39:783][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:784][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:785][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:39:786][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:39:789][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:790][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:792][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:793][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:794][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:796][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:797][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:799][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:803][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:804][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:805][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:806][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:809][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:810][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:812][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:39:813][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:39:814][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:815][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:816][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:39:820][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:39:821][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:822][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:823][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:824][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:825][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:828][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:831][Debug](  TypeBuilder.cpp l.0055) Building type for expression "24" (Operator LITERAL)
[00:29:39:832][Info ](  TypeBuilder.cpp l.0057) Type built for expression "24" = "int" (Operator LITERAL)
[00:29:39:834][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:835][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:836][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:837][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:838][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:839][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:842][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:843][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:848][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:848][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:850][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:852][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:39:854][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:855][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:856][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:39:857][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:39:858][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:859][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:860][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:39:863][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:39:865][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:866][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:867][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:868][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:869][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:870][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:871][Debug](  TypeBuilder.cpp l.0055) Building type for expression "24" (Operator LITERAL)
[00:29:39:874][Info ](  TypeBuilder.cpp l.0057) Type built for expression "24" = "int" (Operator LITERAL)
[00:29:39:875][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:876][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:878][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:879][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:39:880][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:881][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:39:884][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:885][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:39:888][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:889][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "string" (Operator BINARY)
[00:29:39:890][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:891][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:39:894][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:895][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:39:896][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:39:897][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:39:900][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:39:901][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:39:904][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:39:905][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:39:906][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13" (Operator LITERAL)
[00:29:39:907][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13" = "int" (Operator LITERAL)
[00:29:39:909][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:39:910][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:39:911][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:39:914][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:915][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:39:916][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:917][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:918][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:39:920][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:920][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:39:924][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:39:925][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator UNARY)
[00:29:39:926][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:39:927][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:39:929][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:39:930][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:39:931][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:39:934][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator ARRAY_USE)
[00:29:39:937][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:39:938][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:39:939][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:39:940][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:39:943][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:39:944][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:946][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:39:947][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:948][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:949][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:39:951][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:954][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:39:955][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:956][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:39:957][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:39:958][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "array (int)" (Operator BINARY)
[00:29:39:960][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:39:961][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:39:964][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:39:965][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:39:969][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:39:970][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:39:973][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:39:974][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:39:975][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13" (Operator LITERAL)
[00:29:39:976][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13" = "int" (Operator LITERAL)
[00:29:39:978][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:39:979][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:39:980][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:39:983][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:985][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:39:986][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:39:987][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:39:988][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:39:990][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:991][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:39:995][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:39:996][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:39:998][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:39:999][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (int)" (Operator BINARY)
[00:29:40:000][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:001][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:40:004][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:006][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:40:009][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:40:010][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:40:011][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:40:015][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:40:016][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13" (Operator LITERAL)
[00:29:40:018][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13" = "int" (Operator LITERAL)
[00:29:40:019][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:40:020][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:40:021][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:022][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:025][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:026][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:028][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:40:029][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:40:031][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:032][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:40:033][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:034][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:40:037][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:038][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:039][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:40:041][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:40:042][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:043][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:045][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:40:048][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (int)" (Operator BINARY)
[00:29:40:049][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:050][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:40:051][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:052][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:40:056][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:40:058][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:40:059][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:40:060][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:40:062][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13" (Operator LITERAL)
[00:29:40:063][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13" = "int" (Operator LITERAL)
[00:29:40:064][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:40:065][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:40:068][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:069][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:070][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:071][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:073][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:40:074][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:40:075][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:078][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:40:079][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:40:080][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator UNARY)
[00:29:40:082][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:083][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:084][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:085][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:40:088][Debug](  TypeBuilder.cpp l.0055) Building type for expression "226" (Operator LITERAL)
[00:29:40:089][Info ](  TypeBuilder.cpp l.0057) Type built for expression "226" = "int" (Operator LITERAL)
[00:29:40:090][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:092][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:40:093][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:094][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:40:095][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:098][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:40:099][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:40:100][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator UNARY)
[00:29:40:101][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:102][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:103][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:104][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:40:105][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:40:108][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator ARRAY_USE)
[00:29:40:112][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:113][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:114][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:40:115][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:40:118][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:120][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "totoFunc" = "function totoFunc (int)" (Operator FUNCTION_DECLARATION)
[00:29:40:121][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:122][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int)" (Operator FUNCTION_DECLARATION)
[00:29:40:123][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:125][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int)" (Operator VARIABLE_DECLARATION)
[00:29:40:128][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:129][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int)" (Operator UNARY)
[00:29:40:131][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:132][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int)" (Operator UNARY)
[00:29:40:133][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:135][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:139][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:141][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:145][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:40:146][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:150][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:40:155][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:40:160][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator UNARY)
[00:29:40:164][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "int" (Operator UNARY)
[00:29:40:169][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator PARAMETER_DECLARATION)
[00:29:40:171][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator PARAMETER_DECLARATION)
[00:29:40:172][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:174][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:176][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator UNARY)
[00:29:40:177][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator UNARY)
[00:29:40:178][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:40:182][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:40:183][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:184][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:186][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:187][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:188][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:191][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator VARIABLE_DECLARATION)
[00:29:40:193][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:194][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:195][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:196][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:198][Debug](  TypeBuilder.cpp l.0055) Building type for expression "7" (Operator LITERAL)
[00:29:40:199][Info ](  TypeBuilder.cpp l.0057) Type built for expression "7" = "int" (Operator LITERAL)
[00:29:40:203][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:205][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:207][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:208][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:210][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:40:213][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:214][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:40:215][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:40:216][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator UNARY)
[00:29:40:218][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "int" (Operator UNARY)
[00:29:40:221][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator PARAMETER_DECLARATION)
[00:29:40:223][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator PARAMETER_DECLARATION)
[00:29:40:225][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:226][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:228][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator UNARY)
[00:29:40:229][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator UNARY)
[00:29:40:230][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:40:234][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:40:235][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:237][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:239][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:240][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:242][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:246][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator VARIABLE_DECLARATION)
[00:29:40:247][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:249][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:250][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:251][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:253][Debug](  TypeBuilder.cpp l.0055) Building type for expression "7" (Operator LITERAL)
[00:29:40:256][Info ](  TypeBuilder.cpp l.0057) Type built for expression "7" = "int" (Operator LITERAL)
[00:29:40:257][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:259][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:260][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:261][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:263][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:40:264][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:267][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:40:268][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:40:269][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:270][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:272][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:273][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:274][Debug](  TypeBuilder.cpp l.0055) Building type for expression "17" (Operator LITERAL)
[00:29:40:277][Info ](  TypeBuilder.cpp l.0057) Type built for expression "17" = "int" (Operator LITERAL)
[00:29:40:278][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:279][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:281][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:282][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:283][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:284][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:40:285][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:288][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:40:292][Debug](  TypeBuilder.cpp l.0055) Building type for expression "20" (Operator LITERAL)
[00:29:40:292][Info ](  TypeBuilder.cpp l.0057) Type built for expression "20" = "int" (Operator LITERAL)
[00:29:40:294][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:40:295][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:296][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator PARAMETER_DECLARATION)
[00:29:40:298][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator PARAMETER_DECLARATION)
[00:29:40:300][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:301][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:303][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator UNARY)
[00:29:40:304][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int" (Operator UNARY)
[00:29:40:305][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator UNARY)
[00:29:40:308][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int value" (Operator UNARY)
[00:29:40:309][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:40:310][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:40:311][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:313][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:314][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:315][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:318][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:320][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator VARIABLE_DECLARATION)
[00:29:40:322][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:323][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:324][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:325][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (int value - int)" (Operator UNARY)
[00:29:40:327][Debug](  TypeBuilder.cpp l.0055) Building type for expression "7" (Operator LITERAL)
[00:29:40:330][Info ](  TypeBuilder.cpp l.0057) Type built for expression "7" = "int" (Operator LITERAL)
[00:29:40:331][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:333][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:334][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:335][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:337][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:40:338][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:341][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:40:343][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:40:344][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator UNARY)
[00:29:40:345][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "int" (Operator UNARY)
[00:29:40:348][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:351][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (var totoFunc)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:352][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:40:353][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:40:354][Debug](  TypeBuilder.cpp l.0023) Building type for variable "num" (Operator VARIABLE_DECLARATION)
[00:29:40:355][Info ](  TypeBuilder.cpp l.0025) Type built for variable "num" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:356][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test" (Operator LITERAL)
[00:29:40:358][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test" = "string" (Operator LITERAL)
[00:29:40:361][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:40:362][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "string" (Operator VARIABLE_DECLARATION)
[00:29:40:364][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:365][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "totoFunc" = "function totoFunc (var totoFunc)" (Operator FUNCTION_DECLARATION)
[00:29:40:366][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator FUNCTION_DECLARATION)
[00:29:40:367][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (var totoFunc)" (Operator FUNCTION_DECLARATION)
[00:29:40:369][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:373][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (var totoFunc)" (Operator VARIABLE_DECLARATION)
[00:29:40:375][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoFunc" (Operator UNARY)
[00:29:40:376][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoFunc" = "function totoFunc (var totoFunc)" (Operator UNARY)
[00:29:40:378][Debug](  TypeBuilder.cpp l.0055) Building type for expression "totoFunc" (Operator UNARY)
[00:29:40:379][Info ](  TypeBuilder.cpp l.0057) Type built for expression "totoFunc" = "function totoFunc (var totoFunc)" (Operator UNARY)
[00:29:40:380][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:383][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var totoFunc" (Operator FUNCTION_CALL)
[00:29:40:385][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:386][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var totoFunc" (Operator FUNCTION_CALL)
[00:29:40:387][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:40:388][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "var totoFunc" (Operator VARIABLE_DECLARATION)
[00:29:40:389][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:40:390][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "var totoFunc" (Operator UNARY)
[00:29:40:394][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:40:395][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:40:400][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:401][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:404][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:40:406][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:40:407][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator VARIABLE_DECLARATION)
[00:29:40:408][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:409][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Dummy" (Operator FUNCTION_DECLARATION)
[00:29:40:410][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_DECLARATION)
[00:29:40:414][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Dummy" (Operator FUNCTION_DECLARATION)
[00:29:40:415][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_DECLARATION)
[00:29:40:416][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator VARIABLE_DECLARATION)
[00:29:40:417][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator VARIABLE_DECLARATION)
[00:29:40:419][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Runner" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:421][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Runner" = "function Runner (var Runner)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:422][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator PARAMETER_DECLARATION)
[00:29:40:425][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "var Dummy" (Operator PARAMETER_DECLARATION)
[00:29:40:427][Debug](  TypeBuilder.cpp l.0023) Building type for variable "print" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:429][Info ](  TypeBuilder.cpp l.0025) Type built for variable "print" = "function print (var Dummy - int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:431][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:40:432][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "var Dummy" (Operator UNARY)
[00:29:40:433][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:40:437][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:40:438][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "print" (Operator FUNCTION_DECLARATION)
[00:29:40:439][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "print" = "function print (var Dummy - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:440][Debug](  TypeBuilder.cpp l.0055) Building type for expression "print" (Operator FUNCTION_DECLARATION)
[00:29:40:441][Info ](  TypeBuilder.cpp l.0057) Type built for expression "print" = "function print (var Dummy - int)" (Operator FUNCTION_DECLARATION)
[00:29:40:443][Debug](  TypeBuilder.cpp l.0023) Building type for variable "print" (Operator VARIABLE_DECLARATION)
[00:29:40:446][Info ](  TypeBuilder.cpp l.0025) Type built for variable "print" = "function print (var Dummy - int)" (Operator VARIABLE_DECLARATION)
[00:29:40:447][Debug](  TypeBuilder.cpp l.0023) Building type for variable "print" (Operator UNARY)
[00:29:40:448][Info ](  TypeBuilder.cpp l.0025) Type built for variable "print" = "function print (var Dummy - int)" (Operator UNARY)
[00:29:40:450][Debug](  TypeBuilder.cpp l.0055) Building type for expression "print" (Operator UNARY)
[00:29:40:450][Info ](  TypeBuilder.cpp l.0057) Type built for expression "print" = "function print (var Dummy - int)" (Operator UNARY)
[00:29:40:452][Debug](  TypeBuilder.cpp l.0023) Building type for variable "print" (Operator VARIABLE_DECLARATION)
[00:29:40:453][Info ](  TypeBuilder.cpp l.0025) Type built for variable "print" = "function print (var Dummy - int)" (Operator VARIABLE_DECLARATION)
[00:29:40:455][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Runner" (Operator FUNCTION_DECLARATION)
[00:29:40:459][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Runner" = "function Runner (var Runner)" (Operator FUNCTION_DECLARATION)
[00:29:40:460][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Runner" (Operator FUNCTION_DECLARATION)
[00:29:40:461][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Runner" = "function Runner (var Runner)" (Operator FUNCTION_DECLARATION)
[00:29:40:463][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Runner" (Operator VARIABLE_DECLARATION)
[00:29:40:464][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Runner" = "function Runner (var Runner)" (Operator VARIABLE_DECLARATION)
[00:29:40:465][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Runner" (Operator UNARY)
[00:29:40:468][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Runner" = "function Runner (var Runner)" (Operator UNARY)
[00:29:40:470][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Runner" (Operator UNARY)
[00:29:40:471][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Runner" = "function Runner (var Runner)" (Operator UNARY)
[00:29:40:473][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:474][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Runner" (Operator FUNCTION_CALL)
[00:29:40:476][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:40:479][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function print (var Dummy - int)" (Operator FIELD_ACCESS)
[00:29:40:480][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator UNARY)
[00:29:40:481][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator UNARY)
[00:29:40:483][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Dummy" (Operator UNARY)
[00:29:40:484][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Dummy" = "function Dummy (var Dummy)" (Operator UNARY)
[00:29:40:486][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:488][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Dummy" (Operator FUNCTION_CALL)
[00:29:40:491][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:492][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Dummy" (Operator FUNCTION_CALL)
[00:29:40:493][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:495][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:40:496][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:497][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:40:502][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Coldragon" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:503][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Coldragon" = "function Coldragon (var Coldragon)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:504][Debug](  TypeBuilder.cpp l.0055) Building type for expression "20" (Operator LITERAL)
[00:29:40:505][Info ](  TypeBuilder.cpp l.0057) Type built for expression "20" = "int" (Operator LITERAL)
[00:29:40:506][Debug](  TypeBuilder.cpp l.0055) Building type for expression "150" (Operator LITERAL)
[00:29:40:507][Info ](  TypeBuilder.cpp l.0057) Type built for expression "150" = "int" (Operator LITERAL)
[00:29:40:509][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:40:512][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:40:513][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:514][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:515][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:516][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:518][Debug](  TypeBuilder.cpp l.0023) Building type for variable "array" (Operator VARIABLE_DECLARATION)
[00:29:40:519][Info ](  TypeBuilder.cpp l.0025) Type built for variable "array" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:40:522][Debug](  TypeBuilder.cpp l.0023) Building type for variable "array" (Operator UNARY)
[00:29:40:523][Info ](  TypeBuilder.cpp l.0025) Type built for variable "array" = "array (int)" (Operator UNARY)
[00:29:40:524][Debug](  TypeBuilder.cpp l.0055) Building type for expression "array" (Operator UNARY)
[00:29:40:525][Info ](  TypeBuilder.cpp l.0057) Type built for expression "array" = "array (int)" (Operator UNARY)
[00:29:40:526][Debug](  TypeBuilder.cpp l.0023) Building type for variable "array" (Operator VARIABLE_DECLARATION)
[00:29:40:528][Info ](  TypeBuilder.cpp l.0025) Type built for variable "array" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:40:529][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Coldragon" (Operator FUNCTION_DECLARATION)
[00:29:40:533][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Coldragon" = "function Coldragon (var Coldragon)" (Operator FUNCTION_DECLARATION)
[00:29:40:535][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Coldragon" (Operator FUNCTION_DECLARATION)
[00:29:40:536][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Coldragon" = "function Coldragon (var Coldragon)" (Operator FUNCTION_DECLARATION)
[00:29:40:537][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Coldragon" (Operator VARIABLE_DECLARATION)
[00:29:40:538][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Coldragon" = "function Coldragon (var Coldragon)" (Operator VARIABLE_DECLARATION)
[00:29:40:539][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Coldragon" (Operator UNARY)
[00:29:40:540][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Coldragon" = "function Coldragon (var Coldragon)" (Operator UNARY)
[00:29:40:544][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Coldragon" (Operator UNARY)
[00:29:40:545][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Coldragon" = "function Coldragon (var Coldragon)" (Operator UNARY)
[00:29:40:547][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:548][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Coldragon" (Operator FUNCTION_CALL)
[00:29:40:549][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:550][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Coldragon" (Operator FUNCTION_CALL)
[00:29:40:552][Debug](  TypeBuilder.cpp l.0023) Building type for variable "target" (Operator VARIABLE_DECLARATION)
[00:29:40:555][Info ](  TypeBuilder.cpp l.0025) Type built for variable "target" = "var Coldragon" (Operator VARIABLE_DECLARATION)
[00:29:40:556][Debug](  TypeBuilder.cpp l.0023) Building type for variable "target" (Operator UNARY)
[00:29:40:557][Info ](  TypeBuilder.cpp l.0025) Type built for variable "target" = "var Coldragon" (Operator UNARY)
[00:29:40:558][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:40:559][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:40:561][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:40:562][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:40:565][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:566][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:40:567][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:40:568][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "int" (Operator BINARY)
[00:29:40:569][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator VARIABLE_DECLARATION)
[00:29:40:570][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:571][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator UNARY)
[00:29:40:572][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "int" (Operator UNARY)
[00:29:40:575][Debug](  TypeBuilder.cpp l.0055) Building type for expression "data" (Operator UNARY)
[00:29:40:576][Info ](  TypeBuilder.cpp l.0057) Type built for expression "data" = "int" (Operator UNARY)
[00:29:40:580][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:40:581][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:40:582][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:583][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:586][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:587][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:588][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:589][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:590][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:40:592][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:40:593][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:40:596][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:40:597][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:598][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:600][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:601][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:602][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:603][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator ARRAY_DECLARATION)
[00:29:40:604][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:608][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (array (int))" (Operator ARRAY_DECLARATION)
[00:29:40:609][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator VARIABLE_DECLARATION)
[00:29:40:610][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator VARIABLE_DECLARATION)
[00:29:40:612][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator UNARY)
[00:29:40:613][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator UNARY)
[00:29:40:614][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:40:615][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator UNARY)
[00:29:40:618][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:40:619][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:40:621][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:622][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:40:624][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:40:625][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_USE)
[00:29:40:626][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator UNARY)
[00:29:40:629][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator UNARY)
[00:29:40:631][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:40:632][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator UNARY)
[00:29:40:633][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:40:634][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:40:635][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:636][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:40:639][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:640][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:40:642][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:643][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:645][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:40:646][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:40:648][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:40:649][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator ARRAY_USE)
[00:29:40:653][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14.0" (Operator LITERAL)
[00:29:40:654][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14.0" = "float" (Operator LITERAL)
[00:29:40:655][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25.0" (Operator LITERAL)
[00:29:40:656][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25.0" = "float" (Operator LITERAL)
[00:29:40:659][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13.0" (Operator LITERAL)
[00:29:40:660][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13.0" = "float" (Operator LITERAL)
[00:29:40:662][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:40:663][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:40:664][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:665][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:40:666][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:667][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:40:670][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:40:671][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator VARIABLE_DECLARATION)
[00:29:40:673][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:674][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:40:675][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:676][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:40:677][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:40:678][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (float)" (Operator BINARY)
[00:29:40:681][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:682][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (float)" (Operator VARIABLE_AFFECTATION)
[00:29:40:684][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:685][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator VARIABLE_AFFECTATION)
[00:29:40:690][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14.0" (Operator LITERAL)
[00:29:40:692][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14.0" = "float" (Operator LITERAL)
[00:29:40:693][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25.0" (Operator LITERAL)
[00:29:40:694][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25.0" = "float" (Operator LITERAL)
[00:29:40:695][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13.0" (Operator LITERAL)
[00:29:40:696][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13.0" = "float" (Operator LITERAL)
[00:29:40:698][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:40:699][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:40:701][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:703][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:40:704][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:40:705][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:40:707][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:40:708][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator VARIABLE_DECLARATION)
[00:29:40:709][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:712][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:40:713][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:40:714][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:40:715][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:40:716][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:40:717][Debug](  TypeBuilder.cpp l.0055) Building type for expression "12" (Operator LITERAL)
[00:29:40:718][Info ](  TypeBuilder.cpp l.0057) Type built for expression "12" = "int" (Operator LITERAL)
[00:29:40:720][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:40:723][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:40:724][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:40:725][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (float)" (Operator BINARY)
[00:29:40:726][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:40:727][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (float)" (Operator VARIABLE_AFFECTATION)
[00:29:40:729][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:40:730][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator VARIABLE_AFFECTATION)
[00:29:40:764][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:40:765][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:40:766][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:767][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:769][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator PARAMETER_DECLARATION)
[00:29:40:770][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator PARAMETER_DECLARATION)
[00:29:40:771][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:775][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:776][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:40:778][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:40:779][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:40:780][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:40:782][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:40:783][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:40:787][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator UNARY)
[00:29:40:788][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator UNARY)
[00:29:40:789][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator UNARY)
[00:29:40:790][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (int degats - void)" (Operator UNARY)
[00:29:40:792][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:40:793][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:40:794][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:798][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:800][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:801][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:803][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:40:804][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator VARIABLE_DECLARATION)
[00:29:40:805][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:40:809][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:810][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:40:811][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:813][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1Nom" (Operator LITERAL)
[00:29:40:814][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1Nom" = "string" (Operator LITERAL)
[00:29:40:815][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:819][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:40:821][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:822][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:40:824][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:40:825][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:40:826][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:40:831][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator UNARY)
[00:29:40:833][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:40:834][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function attaquer (int degats - void)" (Operator FIELD_ACCESS)
[00:29:40:835][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:40:836][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:40:838][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:839][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:40:843][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:845][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:40:851][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:40:853][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:40:854][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:855][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:857][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:40:859][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:40:860][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test74" (Operator VARIABLE_DECLARATION)
[00:29:40:864][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test74" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:866][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test74" (Operator UNARY)
[00:29:40:866][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test74" = "int" (Operator UNARY)
[00:29:40:868][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test74" (Operator UNARY)
[00:29:40:868][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test74" = "int" (Operator UNARY)
[00:29:40:870][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:40:871][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:873][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:875][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:876][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:877][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:879][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:40:880][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator VARIABLE_DECLARATION)
[00:29:40:881][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:40:885][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:886][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:40:887][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:889][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1Nom" (Operator LITERAL)
[00:29:40:890][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1Nom" = "string" (Operator LITERAL)
[00:29:40:891][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:892][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:40:896][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:40:897][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "int" (Operator BINARY)
[00:29:40:901][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:40:902][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:40:903][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:907][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:908][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:40:909][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:40:910][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator VARIABLE_DECLARATION)
[00:29:40:911][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:913][Debug](  TypeBuilder.cpp l.0023) Building type for variable "cible" (Operator PARAMETER_DECLARATION)
[00:29:40:916][Info ](  TypeBuilder.cpp l.0025) Type built for variable "cible" = "var JoueurClass" (Operator PARAMETER_DECLARATION)
[00:29:40:918][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:919][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var JoueurClass - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:40:920][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:40:922][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "attaquer" = "function attaquer (var JoueurClass - void)" (Operator FUNCTION_DECLARATION)
[00:29:40:924][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:40:925][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var JoueurClass - void)" (Operator FUNCTION_DECLARATION)
[00:29:40:929][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:40:930][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var JoueurClass - void)" (Operator VARIABLE_DECLARATION)
[00:29:40:931][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator UNARY)
[00:29:40:932][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator UNARY)
[00:29:40:933][Debug](  TypeBuilder.cpp l.0055) Building type for expression "nom" (Operator UNARY)
[00:29:40:934][Info ](  TypeBuilder.cpp l.0057) Type built for expression "nom" = "string nom" (Operator UNARY)
[00:29:40:935][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator VARIABLE_DECLARATION)
[00:29:40:936][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator VARIABLE_DECLARATION)
[00:29:40:940][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator UNARY)
[00:29:40:941][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator UNARY)
[00:29:40:942][Debug](  TypeBuilder.cpp l.0055) Building type for expression "puissance" (Operator UNARY)
[00:29:40:943][Info ](  TypeBuilder.cpp l.0057) Type built for expression "puissance" = "int" (Operator UNARY)
[00:29:40:945][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator VARIABLE_DECLARATION)
[00:29:40:946][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:947][Debug](  TypeBuilder.cpp l.0055) Building type for expression "100" (Operator LITERAL)
[00:29:40:950][Info ](  TypeBuilder.cpp l.0057) Type built for expression "100" = "int" (Operator LITERAL)
[00:29:40:951][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pv" (Operator VARIABLE_DECLARATION)
[00:29:40:952][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pv" = "int" (Operator VARIABLE_DECLARATION)
[00:29:40:954][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator UNARY)
[00:29:40:955][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var JoueurClass - void)" (Operator UNARY)
[00:29:40:957][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator UNARY)
[00:29:40:958][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var JoueurClass - void)" (Operator UNARY)
[00:29:40:961][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:40:963][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var JoueurClass - void)" (Operator VARIABLE_DECLARATION)
[00:29:40:964][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:965][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:967][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:40:971][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:40:973][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:40:974][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator VARIABLE_DECLARATION)
[00:29:40:975][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:40:976][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:978][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:40:981][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:983][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1Nom" (Operator LITERAL)
[00:29:40:984][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1Nom" = "string" (Operator LITERAL)
[00:29:40:985][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:40:987][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:40:988][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:40:989][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:40:993][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:40:994][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:40:996][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:40:997][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:40:998][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:40:999][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:41:000][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur2Nom" (Operator LITERAL)
[00:29:41:004][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur2Nom" = "string" (Operator LITERAL)
[00:29:41:005][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:007][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:008][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:009][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:011][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur2" (Operator VARIABLE_DECLARATION)
[00:29:41:011][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur2" = "var JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:41:015][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:41:016][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator UNARY)
[00:29:41:017][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:019][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function attaquer (var JoueurClass - void)" (Operator FIELD_ACCESS)
[00:29:41:020][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur2" (Operator UNARY)
[00:29:41:021][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur2" = "var JoueurClass" (Operator UNARY)
[00:29:41:023][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur2" (Operator UNARY)
[00:29:41:026][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur2" = "var JoueurClass" (Operator UNARY)
[00:29:41:027][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:029][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:030][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:031][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:036][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:038][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:039][Debug](  TypeBuilder.cpp l.0055) Building type for expression "100" (Operator LITERAL)
[00:29:41:041][Info ](  TypeBuilder.cpp l.0057) Type built for expression "100" = "int" (Operator LITERAL)
[00:29:41:042][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator VARIABLE_DECLARATION)
[00:29:41:043][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:047][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator PARAMETER_DECLARATION)
[00:29:41:048][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator PARAMETER_DECLARATION)
[00:29:41:049][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:051][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:052][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator UNARY)
[00:29:41:053][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:054][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator UNARY)
[00:29:41:057][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:059][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator UNARY)
[00:29:41:060][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator UNARY)
[00:29:41:061][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:41:062][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "int" (Operator BINARY)
[00:29:41:063][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:064][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:067][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:41:068][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:070][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "blesser" (Operator FUNCTION_DECLARATION)
[00:29:41:071][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:072][Debug](  TypeBuilder.cpp l.0055) Building type for expression "blesser" (Operator FUNCTION_DECLARATION)
[00:29:41:073][Info ](  TypeBuilder.cpp l.0057) Type built for expression "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:075][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator VARIABLE_DECLARATION)
[00:29:41:078][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:080][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator UNARY)
[00:29:41:081][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator UNARY)
[00:29:41:082][Debug](  TypeBuilder.cpp l.0055) Building type for expression "blesser" (Operator UNARY)
[00:29:41:083][Info ](  TypeBuilder.cpp l.0057) Type built for expression "blesser" = "function blesser (int degats - void)" (Operator UNARY)
[00:29:41:085][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator VARIABLE_DECLARATION)
[00:29:41:086][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:089][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Stats" (Operator FUNCTION_DECLARATION)
[00:29:41:091][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Stats" = "function Stats (var Stats)" (Operator FUNCTION_DECLARATION)
[00:29:41:092][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Stats" (Operator FUNCTION_DECLARATION)
[00:29:41:093][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Stats" = "function Stats (var Stats)" (Operator FUNCTION_DECLARATION)
[00:29:41:094][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:095][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator VARIABLE_DECLARATION)
[00:29:41:097][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:41:100][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:41:102][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:103][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:104][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator UNARY)
[00:29:41:105][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:107][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Stats" (Operator UNARY)
[00:29:41:108][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:112][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:113][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:115][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:116][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:117][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator VARIABLE_DECLARATION)
[00:29:41:118][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:121][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator PARAMETER_DECLARATION)
[00:29:41:123][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator PARAMETER_DECLARATION)
[00:29:41:124][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:125][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:127][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator UNARY)
[00:29:41:128][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator UNARY)
[00:29:41:131][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:133][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function blesser (int degats - void)" (Operator FIELD_ACCESS)
[00:29:41:134][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator UNARY)
[00:29:41:135][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator UNARY)
[00:29:41:136][Debug](  TypeBuilder.cpp l.0055) Building type for expression "degats" (Operator UNARY)
[00:29:41:138][Info ](  TypeBuilder.cpp l.0057) Type built for expression "degats" = "int degats" (Operator UNARY)
[00:29:41:139][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:143][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:145][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:146][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:147][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:41:148][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:149][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:41:153][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:156][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:41:158][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:160][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator UNARY)
[00:29:41:164][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator UNARY)
[00:29:41:167][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator UNARY)
[00:29:41:168][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (int degats - void)" (Operator UNARY)
[00:29:41:170][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:41:171][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:175][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator UNARY)
[00:29:41:178][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator UNARY)
[00:29:41:180][Debug](  TypeBuilder.cpp l.0055) Building type for expression "stats" (Operator UNARY)
[00:29:41:182][Info ](  TypeBuilder.cpp l.0057) Type built for expression "stats" = "var Stats" (Operator UNARY)
[00:29:41:185][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator VARIABLE_DECLARATION)
[00:29:41:186][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:189][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:41:190][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:41:191][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:41:193][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:41:196][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:41:197][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator VARIABLE_DECLARATION)
[00:29:41:199][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:41:200][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:41:201][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:41:202][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:41:204][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1Nom" (Operator LITERAL)
[00:29:41:207][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1Nom" = "string" (Operator LITERAL)
[00:29:41:209][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:210][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:211][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:212][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:214][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:41:215][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:41:219][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:41:220][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator UNARY)
[00:29:41:221][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:222][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function attaquer (int degats - void)" (Operator FIELD_ACCESS)
[00:29:41:224][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:41:225][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:41:228][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:230][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:231][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:232][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:233][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:41:234][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator UNARY)
[00:29:41:235][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:237][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function blesser (int degats - void)" (Operator FIELD_ACCESS)
[00:29:41:241][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:41:242][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:41:243][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:244][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:246][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:247][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:256][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:257][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:260][Debug](  TypeBuilder.cpp l.0055) Building type for expression "100" (Operator LITERAL)
[00:29:41:261][Info ](  TypeBuilder.cpp l.0057) Type built for expression "100" = "int" (Operator LITERAL)
[00:29:41:263][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator VARIABLE_DECLARATION)
[00:29:41:264][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:266][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator PARAMETER_DECLARATION)
[00:29:41:267][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator PARAMETER_DECLARATION)
[00:29:41:269][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:273][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:274][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator UNARY)
[00:29:41:275][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:277][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator UNARY)
[00:29:41:278][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:279][Debug](  TypeBuilder.cpp l.0023) Building type for variable "degats" (Operator UNARY)
[00:29:41:282][Info ](  TypeBuilder.cpp l.0025) Type built for variable "degats" = "int degats" (Operator UNARY)
[00:29:41:283][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:41:284][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "int" (Operator BINARY)
[00:29:41:285][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:286][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:287][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:41:288][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:292][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "blesser" (Operator FUNCTION_DECLARATION)
[00:29:41:293][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:295][Debug](  TypeBuilder.cpp l.0055) Building type for expression "blesser" (Operator FUNCTION_DECLARATION)
[00:29:41:296][Info ](  TypeBuilder.cpp l.0057) Type built for expression "blesser" = "function blesser (int degats - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:298][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator VARIABLE_DECLARATION)
[00:29:41:299][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:300][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator UNARY)
[00:29:41:304][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator UNARY)
[00:29:41:305][Debug](  TypeBuilder.cpp l.0055) Building type for expression "blesser" (Operator UNARY)
[00:29:41:306][Info ](  TypeBuilder.cpp l.0057) Type built for expression "blesser" = "function blesser (int degats - void)" (Operator UNARY)
[00:29:41:308][Debug](  TypeBuilder.cpp l.0023) Building type for variable "blesser" (Operator VARIABLE_DECLARATION)
[00:29:41:309][Info ](  TypeBuilder.cpp l.0025) Type built for variable "blesser" = "function blesser (int degats - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:310][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pointsDeVie" (Operator UNARY)
[00:29:41:312][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:315][Debug](  TypeBuilder.cpp l.0055) Building type for expression "pointsDeVie" (Operator UNARY)
[00:29:41:316][Info ](  TypeBuilder.cpp l.0057) Type built for expression "pointsDeVie" = "int" (Operator UNARY)
[00:29:41:317][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pdv" (Operator VARIABLE_DECLARATION)
[00:29:41:318][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pdv" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:319][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Stats" (Operator FUNCTION_DECLARATION)
[00:29:41:320][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Stats" = "function Stats (var Stats)" (Operator FUNCTION_DECLARATION)
[00:29:41:322][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Stats" (Operator FUNCTION_DECLARATION)
[00:29:41:325][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Stats" = "function Stats (var Stats)" (Operator FUNCTION_DECLARATION)
[00:29:41:326][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:328][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator VARIABLE_DECLARATION)
[00:29:41:329][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:41:330][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:41:332][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:333][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:338][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator UNARY)
[00:29:41:339][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:341][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Stats" (Operator UNARY)
[00:29:41:343][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:347][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:348][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:350][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:351][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:352][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator VARIABLE_DECLARATION)
[00:29:41:353][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:359][Debug](  TypeBuilder.cpp l.0023) Building type for variable "statsDegats" (Operator PARAMETER_DECLARATION)
[00:29:41:360][Info ](  TypeBuilder.cpp l.0025) Type built for variable "statsDegats" = "var Stats" (Operator PARAMETER_DECLARATION)
[00:29:41:362][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator PARAMETER_DECLARATION)
[00:29:41:364][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int test" (Operator PARAMETER_DECLARATION)
[00:29:41:366][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:369][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Stats - int test - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:371][Debug](  TypeBuilder.cpp l.0023) Building type for variable "stats" (Operator UNARY)
[00:29:41:372][Info ](  TypeBuilder.cpp l.0025) Type built for variable "stats" = "var Stats" (Operator UNARY)
[00:29:41:373][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:374][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function blesser (int degats - void)" (Operator FIELD_ACCESS)
[00:29:41:376][Debug](  TypeBuilder.cpp l.0023) Building type for variable "statsDegats" (Operator UNARY)
[00:29:41:381][Info ](  TypeBuilder.cpp l.0025) Type built for variable "statsDegats" = "var Stats" (Operator UNARY)
[00:29:41:382][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:383][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
[00:29:41:385][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:386][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:388][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:389][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:392][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:41:393][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "attaquer" = "function attaquer (var Stats - int test - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:395][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:41:396][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var Stats - int test - void)" (Operator FUNCTION_DECLARATION)
[00:29:41:398][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:41:399][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Stats - int test - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:403][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator UNARY)
[00:29:41:404][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Stats - int test - void)" (Operator UNARY)
[00:29:41:406][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator UNARY)
[00:29:41:407][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var Stats - int test - void)" (Operator UNARY)
[00:29:41:409][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:41:410][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Stats - int test - void)" (Operator VARIABLE_DECLARATION)
[00:29:41:415][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:41:416][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:41:418][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator FUNCTION_DECLARATION)
[00:29:41:419][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator FUNCTION_DECLARATION)
[00:29:41:421][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:41:422][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator VARIABLE_DECLARATION)
[00:29:41:425][Debug](  TypeBuilder.cpp l.0023) Building type for variable "JoueurClass" (Operator UNARY)
[00:29:41:426][Info ](  TypeBuilder.cpp l.0025) Type built for variable "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:41:428][Debug](  TypeBuilder.cpp l.0055) Building type for expression "JoueurClass" (Operator UNARY)
[00:29:41:429][Info ](  TypeBuilder.cpp l.0057) Type built for expression "JoueurClass" = "function JoueurClass (string nom - var JoueurClass)" (Operator UNARY)
[00:29:41:431][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1Nom" (Operator LITERAL)
[00:29:41:432][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1Nom" = "string" (Operator LITERAL)
[00:29:41:436][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:438][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:439][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:440][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var JoueurClass" (Operator FUNCTION_CALL)
[00:29:41:441][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:41:442][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator VARIABLE_DECLARATION)
[00:29:41:444][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Stats" (Operator UNARY)
[00:29:41:447][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:449][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Stats" (Operator UNARY)
[00:29:41:450][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Stats" = "function Stats (var Stats)" (Operator UNARY)
[00:29:41:451][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:452][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:454][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:457][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Stats" (Operator FUNCTION_CALL)
[00:29:41:459][Debug](  TypeBuilder.cpp l.0023) Building type for variable "statsDeg" (Operator VARIABLE_DECLARATION)
[00:29:41:460][Info ](  TypeBuilder.cpp l.0025) Type built for variable "statsDeg" = "var Stats" (Operator VARIABLE_DECLARATION)
[00:29:41:463][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:41:464][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var JoueurClass" (Operator UNARY)
[00:29:41:465][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:469][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function attaquer (var Stats - int test - void)" (Operator FIELD_ACCESS)
[00:29:41:470][Debug](  TypeBuilder.cpp l.0023) Building type for variable "statsDeg" (Operator UNARY)
[00:29:41:471][Info ](  TypeBuilder.cpp l.0025) Type built for variable "statsDeg" = "var Stats" (Operator UNARY)
[00:29:41:472][Debug](  TypeBuilder.cpp l.0055) Building type for expression "statsDeg" (Operator UNARY)
[00:29:41:473][Info ](  TypeBuilder.cpp l.0057) Type built for expression "statsDeg" = "var Stats" (Operator UNARY)
[00:29:41:475][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:41:476][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:41:479][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:480][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:41:482][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:483][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:41:487][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc137" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:489][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:491][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test137_" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:492][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test137_" = "function test137_ (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:494][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:41:495][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:41:496][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "test137_" (Operator FUNCTION_DECLARATION)
[00:29:41:500][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "test137_" = "function test137_ (int)" (Operator FUNCTION_DECLARATION)
[00:29:41:501][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test137_" (Operator FUNCTION_DECLARATION)
[00:29:41:502][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test137_" = "function test137_ (int)" (Operator FUNCTION_DECLARATION)
[00:29:41:504][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test137_" (Operator VARIABLE_DECLARATION)
[00:29:41:505][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test137_" = "function test137_ (int)" (Operator VARIABLE_DECLARATION)
[00:29:41:506][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test137_" (Operator UNARY)
[00:29:41:507][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test137_" = "function test137_ (int)" (Operator UNARY)
[00:29:41:511][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test137_" (Operator UNARY)
[00:29:41:512][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test137_" = "function test137_ (int)" (Operator UNARY)
[00:29:41:513][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:41:514][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "function test137_ (int)" (Operator VARIABLE_DECLARATION)
[00:29:41:516][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc137" (Operator FUNCTION_DECLARATION)
[00:29:41:517][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator FUNCTION_DECLARATION)
[00:29:41:518][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc137" (Operator FUNCTION_DECLARATION)
[00:29:41:522][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator FUNCTION_DECLARATION)
[00:29:41:524][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc137" (Operator VARIABLE_DECLARATION)
[00:29:41:525][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator VARIABLE_DECLARATION)
[00:29:41:526][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc137" (Operator UNARY)
[00:29:41:528][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator UNARY)
[00:29:41:529][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc137" (Operator UNARY)
[00:29:41:532][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc137" = "function lvalFunc137 (var lvalFunc137)" (Operator UNARY)
[00:29:41:534][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:536][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var lvalFunc137" (Operator FUNCTION_CALL)
[00:29:41:537][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:538][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var lvalFunc137" (Operator FUNCTION_CALL)
[00:29:41:539][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator VARIABLE_DECLARATION)
[00:29:41:540][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc137" (Operator VARIABLE_DECLARATION)
[00:29:41:545][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator UNARY)
[00:29:41:546][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc137" (Operator UNARY)
[00:29:41:548][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:549][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function test137_ (int)" (Operator FIELD_ACCESS)
[00:29:41:550][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:551][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:41:555][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1234" (Operator LITERAL)
[00:29:41:556][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1234" = "int" (Operator LITERAL)
[00:29:41:557][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:558][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:562][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc160" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:564][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:566][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc160" (Operator FUNCTION_DECLARATION)
[00:29:41:567][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator FUNCTION_DECLARATION)
[00:29:41:568][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc160" (Operator FUNCTION_DECLARATION)
[00:29:41:570][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator FUNCTION_DECLARATION)
[00:29:41:571][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc160" (Operator VARIABLE_DECLARATION)
[00:29:41:574][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator VARIABLE_DECLARATION)
[00:29:41:576][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc163" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:578][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:579][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc163" (Operator FUNCTION_DECLARATION)
[00:29:41:581][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator FUNCTION_DECLARATION)
[00:29:41:582][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc163" (Operator FUNCTION_DECLARATION)
[00:29:41:586][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator FUNCTION_DECLARATION)
[00:29:41:588][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc163" (Operator VARIABLE_DECLARATION)
[00:29:41:589][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator VARIABLE_DECLARATION)
[00:29:41:590][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc160" (Operator UNARY)
[00:29:41:591][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator UNARY)
[00:29:41:593][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc160" (Operator UNARY)
[00:29:41:596][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc160" = "function lvalFunc160 (var lvalFunc160)" (Operator UNARY)
[00:29:41:598][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:599][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var lvalFunc160" (Operator FUNCTION_CALL)
[00:29:41:600][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:602][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var lvalFunc160" (Operator FUNCTION_CALL)
[00:29:41:603][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator VARIABLE_DECLARATION)
[00:29:41:604][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc160" (Operator VARIABLE_DECLARATION)
[00:29:41:608][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator UNARY)
[00:29:41:610][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc160" (Operator UNARY)
[00:29:41:611][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc163" (Operator UNARY)
[00:29:41:612][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator UNARY)
[00:29:41:614][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc163" (Operator UNARY)
[00:29:41:615][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc163" = "function lvalFunc163 (var lvalFunc163)" (Operator UNARY)
[00:29:41:618][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:619][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var lvalFunc163" (Operator FUNCTION_CALL)
[00:29:41:621][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:622][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var lvalFunc163" (Operator FUNCTION_CALL)
[00:29:41:623][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:624][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "var lvalFunc160" (Operator VARIABLE_AFFECTATION)
[00:29:41:632][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:633][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:635][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:41:636][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:41:638][Debug](  TypeBuilder.cpp l.0023) Building type for variable "data" (Operator VARIABLE_DECLARATION)
[00:29:41:639][Info ](  TypeBuilder.cpp l.0025) Type built for variable "data" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:641][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Dummy" (Operator FUNCTION_DECLARATION)
[00:29:41:642][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_DECLARATION)
[00:29:41:644][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Dummy" (Operator FUNCTION_DECLARATION)
[00:29:41:645][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Dummy" = "function Dummy (var Dummy)" (Operator FUNCTION_DECLARATION)
[00:29:41:650][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator VARIABLE_DECLARATION)
[00:29:41:651][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator VARIABLE_DECLARATION)
[00:29:41:652][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Dummy" (Operator UNARY)
[00:29:41:653][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Dummy" = "function Dummy (var Dummy)" (Operator UNARY)
[00:29:41:655][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:661][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc185" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:663][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:664][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:41:665][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:41:667][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:41:668][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:671][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc185" (Operator FUNCTION_DECLARATION)
[00:29:41:673][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator FUNCTION_DECLARATION)
[00:29:41:674][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc185" (Operator FUNCTION_DECLARATION)
[00:29:41:676][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator FUNCTION_DECLARATION)
[00:29:41:677][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc185" (Operator VARIABLE_DECLARATION)
[00:29:41:678][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator VARIABLE_DECLARATION)
[00:29:41:682][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:683][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:685][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc185" (Operator UNARY)
[00:29:41:686][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator UNARY)
[00:29:41:687][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc185" (Operator UNARY)
[00:29:41:688][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc185" = "function lvalFunc185 (var lvalFunc185)" (Operator UNARY)
[00:29:41:692][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:694][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var lvalFunc185" (Operator FUNCTION_CALL)
[00:29:41:695][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:696][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var lvalFunc185" (Operator FUNCTION_CALL)
[00:29:41:698][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc188" (Operator FUNCTION_DECLARATION)
[00:29:41:699][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator FUNCTION_DECLARATION)
[00:29:41:701][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc188" (Operator FUNCTION_DECLARATION)
[00:29:41:704][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator FUNCTION_DECLARATION)
[00:29:41:706][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator VARIABLE_DECLARATION)
[00:29:41:707][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator VARIABLE_DECLARATION)
[00:29:41:708][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator UNARY)
[00:29:41:709][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator UNARY)
[00:29:41:711][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc188" (Operator UNARY)
[00:29:41:714][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc188" = "function lvalFunc188 (var lvalFunc185)" (Operator UNARY)
[00:29:41:716][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:717][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var lvalFunc185" (Operator FUNCTION_CALL)
[00:29:41:718][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:719][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var lvalFunc185" (Operator FUNCTION_CALL)
[00:29:41:721][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator VARIABLE_DECLARATION)
[00:29:41:722][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc185" (Operator VARIABLE_DECLARATION)
[00:29:41:726][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator UNARY)
[00:29:41:727][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var lvalFunc185" (Operator UNARY)
[00:29:41:728][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1234" (Operator LITERAL)
[00:29:41:730][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1234" = "int" (Operator LITERAL)
[00:29:41:731][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:732][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:733][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:41:736][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:740][Debug](  TypeBuilder.cpp l.0047) Building type for script link "" (Operator SCRIPT_LINK)
[00:29:41:740][Info ](  TypeBuilder.cpp l.0049) Type built for script link "" = "void" (Operator SCRIPT_LINK)
[00:29:41:743][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator PARAMETER_DECLARATION)
[00:29:41:746][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator PARAMETER_DECLARATION)
[00:29:41:747][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:749][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:750][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:41:751][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:41:752][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:41:755][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:757][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator UNARY)
[00:29:41:758][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator UNARY)
[00:29:41:759][Debug](  TypeBuilder.cpp l.0055) Building type for expression "age" (Operator UNARY)
[00:29:41:760][Info ](  TypeBuilder.cpp l.0057) Type built for expression "age" = "int" (Operator UNARY)
[00:29:41:761][Debug](  TypeBuilder.cpp l.0023) Building type for variable "age" (Operator VARIABLE_DECLARATION)
[00:29:41:762][Info ](  TypeBuilder.cpp l.0025) Type built for variable "age" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:765][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name_" (Operator UNARY)
[00:29:41:766][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name_" = "string name_" (Operator UNARY)
[00:29:41:768][Debug](  TypeBuilder.cpp l.0055) Building type for expression "name_" (Operator UNARY)
[00:29:41:769][Info ](  TypeBuilder.cpp l.0057) Type built for expression "name_" = "string name_" (Operator UNARY)
[00:29:41:771][Debug](  TypeBuilder.cpp l.0023) Building type for variable "name" (Operator VARIABLE_DECLARATION)
[00:29:41:772][Info ](  TypeBuilder.cpp l.0025) Type built for variable "name" = "string name_" (Operator VARIABLE_DECLARATION)
[00:29:41:773][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "build" (Operator FUNCTION_DECLARATION)
[00:29:41:776][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:41:778][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator FUNCTION_DECLARATION)
[00:29:41:780][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator FUNCTION_DECLARATION)
[00:29:41:781][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator VARIABLE_DECLARATION)
[00:29:41:782][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator VARIABLE_DECLARATION)
[00:29:41:786][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Default" (Operator LITERAL)
[00:29:41:787][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Default" = "string" (Operator LITERAL)
[00:29:41:788][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator VARIABLE_DECLARATION)
[00:29:41:789][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator VARIABLE_DECLARATION)
[00:29:41:790][Debug](  TypeBuilder.cpp l.0023) Building type for variable "build" (Operator UNARY)
[00:29:41:792][Info ](  TypeBuilder.cpp l.0025) Type built for variable "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:41:793][Debug](  TypeBuilder.cpp l.0055) Building type for expression "build" (Operator UNARY)
[00:29:41:796][Info ](  TypeBuilder.cpp l.0057) Type built for expression "build" = "function build (string name_ - var build)" (Operator UNARY)
[00:29:41:798][Debug](  TypeBuilder.cpp l.0023) Building type for variable "defaultStr" (Operator UNARY)
[00:29:41:799][Info ](  TypeBuilder.cpp l.0025) Type built for variable "defaultStr" = "string" (Operator UNARY)
[00:29:41:800][Debug](  TypeBuilder.cpp l.0055) Building type for expression "defaultStr" (Operator UNARY)
[00:29:41:801][Info ](  TypeBuilder.cpp l.0057) Type built for expression "defaultStr" = "string" (Operator UNARY)
[00:29:41:802][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:804][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:807][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:808][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:809][Debug](  TypeBuilder.cpp l.0023) Building type for variable "default" (Operator VARIABLE_DECLARATION)
[00:29:41:810][Info ](  TypeBuilder.cpp l.0025) Type built for variable "default" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:41:813][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator IMPORT)
[00:29:41:813][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var ../test/src/resources/character" (Operator IMPORT)
[00:29:41:815][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator VARIABLE_DECLARATION)
[00:29:41:818][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator VARIABLE_DECLARATION)
[00:29:41:819][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:821][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var build)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:41:822][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Character" (Operator UNARY)
[00:29:41:823][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Character" = "var ../test/src/resources/character" (Operator UNARY)
[00:29:41:824][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:41:826][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function build (string name_ - var build)" (Operator FIELD_ACCESS)
[00:29:41:831][Debug](  TypeBuilder.cpp l.0055) Building type for expression "t" (Operator LITERAL)
[00:29:41:832][Info ](  TypeBuilder.cpp l.0057) Type built for expression "t" = "string" (Operator LITERAL)
[00:29:41:833][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:834][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:835][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:836][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:838][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc188" (Operator FUNCTION_DECLARATION)
[00:29:41:843][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc188" = "function lvalFunc188 (var build)" (Operator FUNCTION_DECLARATION)
[00:29:41:844][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc188" (Operator FUNCTION_DECLARATION)
[00:29:41:845][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc188" = "function lvalFunc188 (var build)" (Operator FUNCTION_DECLARATION)
[00:29:41:847][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator VARIABLE_DECLARATION)
[00:29:41:848][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var build)" (Operator VARIABLE_DECLARATION)
[00:29:41:849][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc188" (Operator UNARY)
[00:29:41:852][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc188" = "function lvalFunc188 (var build)" (Operator UNARY)
[00:29:41:854][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc188" (Operator UNARY)
[00:29:41:855][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc188" = "function lvalFunc188 (var build)" (Operator UNARY)
[00:29:41:856][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:41:858][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:860][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:41:863][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var build" (Operator FUNCTION_CALL)
[00:29:41:864][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator VARIABLE_DECLARATION)
[00:29:41:865][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var build" (Operator VARIABLE_DECLARATION)
[00:29:41:867][Debug](  TypeBuilder.cpp l.0023) Building type for variable "object" (Operator UNARY)
[00:29:41:868][Info ](  TypeBuilder.cpp l.0025) Type built for variable "object" = "var build" (Operator UNARY)
[00:29:41:869][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1234" (Operator LITERAL)
[00:29:41:870][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1234" = "int" (Operator LITERAL)
[00:29:41:871][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:41:874][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:877][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:41:879][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:41:881][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:41:882][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:41:884][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:885][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "bool" (Operator VARIABLE_DECLARATION)
[00:29:41:888][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:41:889][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:41:891][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:892][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:41:895][Debug](  TypeBuilder.cpp l.0055) Building type for expression "5.2" (Operator LITERAL)
[00:29:41:896][Info ](  TypeBuilder.cpp l.0057) Type built for expression "5.2" = "float" (Operator LITERAL)
[00:29:41:897][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:41:898][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "float" (Operator VARIABLE_DECLARATION)
[00:29:41:900][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:41:901][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:41:902][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:41:905][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "float" (Operator UNARY)
[00:29:41:906][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:41:908][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "float" (Operator BINARY)
[00:29:41:911][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:41:912][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:41:914][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:915][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:917][Debug](  TypeBuilder.cpp l.0055) Building type for expression "test" (Operator LITERAL)
[00:29:41:918][Info ](  TypeBuilder.cpp l.0057) Type built for expression "test" = "string" (Operator LITERAL)
[00:29:41:919][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:41:920][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:41:921][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:41:922][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:41:925][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:41:926][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:41:928][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:41:929][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "string" (Operator BINARY)
[00:29:41:932][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:41:935][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:41:936][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:937][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:938][Debug](  TypeBuilder.cpp l.0055) Building type for expression "5.2" (Operator LITERAL)
[00:29:41:939][Info ](  TypeBuilder.cpp l.0057) Type built for expression "5.2" = "float" (Operator LITERAL)
[00:29:41:941][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:41:942][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "float" (Operator VARIABLE_DECLARATION)
[00:29:41:943][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:41:946][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:41:947][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:41:948][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "float" (Operator UNARY)
[00:29:41:950][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:41:951][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "float" (Operator BINARY)
[00:29:41:953][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:41:956][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:41:957][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:958][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:41:960][Debug](  TypeBuilder.cpp l.0055) Building type for expression "5" (Operator LITERAL)
[00:29:41:961][Info ](  TypeBuilder.cpp l.0057) Type built for expression "5" = "int" (Operator LITERAL)
[00:29:41:962][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:41:963][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:964][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:41:967][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:41:968][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:41:969][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:41:970][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:41:972][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "float" (Operator BINARY)
[00:29:41:975][Debug](  TypeBuilder.cpp l.0055) Building type for expression "tititititit" (Operator LITERAL)
[00:29:41:977][Info ](  TypeBuilder.cpp l.0057) Type built for expression "tititititit" = "string" (Operator LITERAL)
[00:29:41:979][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:41:980][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "string" (Operator VARIABLE_DECLARATION)
[00:29:41:981][Debug](  TypeBuilder.cpp l.0055) Building type for expression "6" (Operator LITERAL)
[00:29:41:982][Info ](  TypeBuilder.cpp l.0057) Type built for expression "6" = "int" (Operator LITERAL)
[00:29:41:983][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:41:985][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:41:988][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:41:989][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "string" (Operator UNARY)
[00:29:41:990][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:41:991][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:41:992][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:41:993][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "string" (Operator BINARY)
[00:29:41:996][Debug](  TypeBuilder.cpp l.0055) Building type for expression "strrrr" (Operator LITERAL)
[00:29:41:998][Info ](  TypeBuilder.cpp l.0057) Type built for expression "strrrr" = "string" (Operator LITERAL)
[00:29:41:999][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:000][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "string" (Operator VARIABLE_DECLARATION)
[00:29:42:001][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:002][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "string" (Operator UNARY)
[00:29:42:003][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:004][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:007][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:008][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "string" (Operator VARIABLE_AFFECTATION)
[00:29:42:010][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:011][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string" (Operator VARIABLE_AFFECTATION)
[00:29:42:014][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.1" (Operator LITERAL)
[00:29:42:014][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.1" = "float" (Operator LITERAL)
[00:29:42:017][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:018][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:42:019][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:020][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:42:022][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator LITERAL)
[00:29:42:023][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator LITERAL)
[00:29:42:024][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:025][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:028][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:029][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:032][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.1" (Operator LITERAL)
[00:29:42:033][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.1" = "float" (Operator LITERAL)
[00:29:42:034][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:035][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:42:038][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator LITERAL)
[00:29:42:039][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator LITERAL)
[00:29:42:040][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:041][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator VARIABLE_DECLARATION)
[00:29:42:043][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:044][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:42:045][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:048][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "string" (Operator UNARY)
[00:29:42:049][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:42:050][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator UNARY)
[00:29:42:051][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:052][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:053][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:055][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:060][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.1" (Operator LITERAL)
[00:29:42:061][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.1" = "float" (Operator LITERAL)
[00:29:42:062][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:064][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:42:065][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:066][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:42:069][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.2" (Operator LITERAL)
[00:29:42:070][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.2" = "float" (Operator LITERAL)
[00:29:42:071][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:072][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:073][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:074][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:077][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.1" (Operator LITERAL)
[00:29:42:079][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.1" = "float" (Operator LITERAL)
[00:29:42:081][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:082][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:42:083][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:084][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:42:086][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:42:087][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:42:089][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:090][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:092][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:094][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:097][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:42:099][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:42:100][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:101][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:102][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:103][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:42:104][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0.2" (Operator LITERAL)
[00:29:42:105][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0.2" = "float" (Operator LITERAL)
[00:29:42:106][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:110][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:42:111][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:114][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:42:116][Debug](  TypeBuilder.cpp l.0055) Building type for expression "7" (Operator LITERAL)
[00:29:42:117][Info ](  TypeBuilder.cpp l.0057) Type built for expression "7" = "int" (Operator LITERAL)
[00:29:42:120][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:121][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:122][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:123][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "int" (Operator UNARY)
[00:29:42:124][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:42:125][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "string" (Operator LITERAL)
[00:29:42:127][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:130][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:42:131][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:132][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:42:135][Debug](  TypeBuilder.cpp l.0055) Building type for expression "7.8" (Operator LITERAL)
[00:29:42:136][Info ](  TypeBuilder.cpp l.0057) Type built for expression "7.8" = "float" (Operator LITERAL)
[00:29:42:137][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:42:140][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator VARIABLE_DECLARATION)
[00:29:42:141][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:42:142][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "float" (Operator UNARY)
[00:29:42:143][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:42:144][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "string" (Operator LITERAL)
[00:29:42:145][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:146][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:148][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:151][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "float" (Operator VARIABLE_AFFECTATION)
[00:29:42:154][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:155][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:157][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator VARIABLE_DECLARATION)
[00:29:42:158][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:160][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:162][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc" = "function lvalFunc (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:164][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:165][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:166][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "lvalFunc" (Operator FUNCTION_DECLARATION)
[00:29:42:167][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "lvalFunc" = "function lvalFunc (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:171][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc" (Operator FUNCTION_DECLARATION)
[00:29:42:172][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc" = "function lvalFunc (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:173][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc" (Operator VARIABLE_DECLARATION)
[00:29:42:174][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc" = "function lvalFunc (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:175][Debug](  TypeBuilder.cpp l.0023) Building type for variable "lvalFunc" (Operator UNARY)
[00:29:42:176][Info ](  TypeBuilder.cpp l.0025) Type built for variable "lvalFunc" = "function lvalFunc (int)" (Operator UNARY)
[00:29:42:178][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lvalFunc" (Operator UNARY)
[00:29:42:181][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lvalFunc" = "function lvalFunc (int)" (Operator UNARY)
[00:29:42:183][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:184][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:42:186][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator UNARY)
[00:29:42:187][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "int" (Operator UNARY)
[00:29:42:188][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testIf188" (Operator UNARY)
[00:29:42:189][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testIf188" = "int" (Operator UNARY)
[00:29:42:190][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:193][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "int" (Operator VARIABLE_AFFECTATION)
[00:29:42:197][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator PARAMETER_DECLARATION)
[00:29:42:198][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "string test" (Operator PARAMETER_DECLARATION)
[00:29:42:199][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi121" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:201][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi121" = "function titi121 (string test - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:204][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi121" (Operator FUNCTION_DECLARATION)
[00:29:42:205][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi121" = "function titi121 (string test - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:207][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi121" (Operator FUNCTION_DECLARATION)
[00:29:42:208][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi121" = "function titi121 (string test - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:209][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi121" (Operator VARIABLE_DECLARATION)
[00:29:42:211][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi121" = "function titi121 (string test - void)" (Operator VARIABLE_DECLARATION)
[00:29:42:214][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi121" (Operator UNARY)
[00:29:42:215][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi121" = "function titi121 (string test - void)" (Operator UNARY)
[00:29:42:217][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi121" (Operator UNARY)
[00:29:42:218][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi121" = "function titi121 (string test - void)" (Operator UNARY)
[00:29:42:220][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lol" (Operator LITERAL)
[00:29:42:221][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lol" = "string" (Operator LITERAL)
[00:29:42:224][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:226][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:42:227][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:228][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:42:231][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator PARAMETER_DECLARATION)
[00:29:42:234][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "string test" (Operator PARAMETER_DECLARATION)
[00:29:42:236][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi129" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:238][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi129" = "function titi129 (string test - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:239][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi129" (Operator FUNCTION_DECLARATION)
[00:29:42:240][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi129" = "function titi129 (string test - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:242][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi129" (Operator FUNCTION_DECLARATION)
[00:29:42:245][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi129" = "function titi129 (string test - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:247][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi129" (Operator VARIABLE_DECLARATION)
[00:29:42:248][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi129" = "function titi129 (string test - void)" (Operator VARIABLE_DECLARATION)
[00:29:42:249][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi129" (Operator UNARY)
[00:29:42:250][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi129" = "function titi129 (string test - void)" (Operator UNARY)
[00:29:42:252][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi129" (Operator UNARY)
[00:29:42:253][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi129" = "function titi129 (string test - void)" (Operator UNARY)
[00:29:42:256][Debug](  TypeBuilder.cpp l.0055) Building type for expression "23" (Operator LITERAL)
[00:29:42:257][Info ](  TypeBuilder.cpp l.0057) Type built for expression "23" = "int" (Operator LITERAL)
[00:29:42:258][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:260][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:42:261][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:262][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:42:269][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nomL" (Operator PARAMETER_DECLARATION)
[00:29:42:270][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nomL" = "string nomL" (Operator PARAMETER_DECLARATION)
[00:29:42:271][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur1" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:272][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:274][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nomL" (Operator UNARY)
[00:29:42:277][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nomL" = "string nomL" (Operator UNARY)
[00:29:42:278][Debug](  TypeBuilder.cpp l.0055) Building type for expression "nomL" (Operator UNARY)
[00:29:42:279][Info ](  TypeBuilder.cpp l.0057) Type built for expression "nomL" = "string nomL" (Operator UNARY)
[00:29:42:281][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator VARIABLE_DECLARATION)
[00:29:42:282][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nomL" (Operator VARIABLE_DECLARATION)
[00:29:42:283][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Joueur1" (Operator FUNCTION_DECLARATION)
[00:29:42:284][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator FUNCTION_DECLARATION)
[00:29:42:288][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur1" (Operator FUNCTION_DECLARATION)
[00:29:42:290][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator FUNCTION_DECLARATION)
[00:29:42:292][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur1" (Operator VARIABLE_DECLARATION)
[00:29:42:293][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator VARIABLE_DECLARATION)
[00:29:42:295][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur1" (Operator UNARY)
[00:29:42:299][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator UNARY)
[00:29:42:300][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur1" (Operator UNARY)
[00:29:42:301][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur1" = "function Joueur1 (string nomL - var Joueur1)" (Operator UNARY)
[00:29:42:303][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur 1" (Operator LITERAL)
[00:29:42:304][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur 1" = "string" (Operator LITERAL)
[00:29:42:305][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:306][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Joueur1" (Operator FUNCTION_CALL)
[00:29:42:310][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:311][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Joueur1" (Operator FUNCTION_CALL)
[00:29:42:312][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:42:314][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur1" (Operator VARIABLE_DECLARATION)
[00:29:42:315][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:42:316][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur1" (Operator UNARY)
[00:29:42:319][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:42:320][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string nomL" (Operator FIELD_ACCESS)
[00:29:42:323][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:42:324][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:42:325][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur2" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:327][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:331][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator UNARY)
[00:29:42:332][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator UNARY)
[00:29:42:334][Debug](  TypeBuilder.cpp l.0055) Building type for expression "nom" (Operator UNARY)
[00:29:42:335][Info ](  TypeBuilder.cpp l.0057) Type built for expression "nom" = "string nom" (Operator UNARY)
[00:29:42:336][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator VARIABLE_DECLARATION)
[00:29:42:337][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator VARIABLE_DECLARATION)
[00:29:42:340][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Joueur2" (Operator FUNCTION_DECLARATION)
[00:29:42:342][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator FUNCTION_DECLARATION)
[00:29:42:343][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur2" (Operator FUNCTION_DECLARATION)
[00:29:42:345][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator FUNCTION_DECLARATION)
[00:29:42:347][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur2" (Operator VARIABLE_DECLARATION)
[00:29:42:348][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator VARIABLE_DECLARATION)
[00:29:42:351][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur2" (Operator UNARY)
[00:29:42:352][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator UNARY)
[00:29:42:353][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur2" (Operator UNARY)
[00:29:42:354][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur2" = "function Joueur2 (string nom - var Joueur2)" (Operator UNARY)
[00:29:42:356][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur 1" (Operator LITERAL)
[00:29:42:357][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur 1" = "string" (Operator LITERAL)
[00:29:42:358][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:363][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Joueur2" (Operator FUNCTION_CALL)
[00:29:42:364][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:366][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Joueur2" (Operator FUNCTION_CALL)
[00:29:42:367][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:42:368][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur2" (Operator VARIABLE_DECLARATION)
[00:29:42:369][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:42:372][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur2" (Operator UNARY)
[00:29:42:373][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:42:374][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string nom" (Operator FIELD_ACCESS)
[00:29:42:378][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:379][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:382][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2543" (Operator LITERAL)
[00:29:42:383][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2543" = "int" (Operator LITERAL)
[00:29:42:384][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "testReturn148" (Operator FUNCTION_DECLARATION)
[00:29:42:386][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:387][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testReturn148" (Operator FUNCTION_DECLARATION)
[00:29:42:388][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:390][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator VARIABLE_DECLARATION)
[00:29:42:394][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:395][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator UNARY)
[00:29:42:397][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator UNARY)
[00:29:42:398][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testReturn148" (Operator UNARY)
[00:29:42:399][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testReturn148" = "function testReturn148 (int)" (Operator UNARY)
[00:29:42:401][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:404][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "int" (Operator FUNCTION_CALL)
[00:29:42:406][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:407][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FUNCTION_CALL)
[00:29:42:408][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator VARIABLE_DECLARATION)
[00:29:42:409][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:410][Debug](  TypeBuilder.cpp l.0023) Building type for variable "value" (Operator UNARY)
[00:29:42:411][Info ](  TypeBuilder.cpp l.0025) Type built for variable "value" = "int" (Operator UNARY)
[00:29:42:414][Debug](  TypeBuilder.cpp l.0055) Building type for expression "value" (Operator UNARY)
[00:29:42:416][Info ](  TypeBuilder.cpp l.0057) Type built for expression "value" = "int" (Operator UNARY)
[00:29:42:418][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:420][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:421][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2543" (Operator LITERAL)
[00:29:42:422][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2543" = "int" (Operator LITERAL)
[00:29:42:428][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:430][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:431][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:42:432][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:42:435][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:436][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:440][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:441][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:443][Debug](  TypeBuilder.cpp l.0055) Building type for expression "true" (Operator LITERAL)
[00:29:42:446][Info ](  TypeBuilder.cpp l.0057) Type built for expression "true" = "bool" (Operator LITERAL)
[00:29:42:449][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:451][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:452][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2543" (Operator LITERAL)
[00:29:42:455][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2543" = "int" (Operator LITERAL)
[00:29:42:456][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:42:457][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:42:458][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator VARIABLE_DECLARATION)
[00:29:42:459][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:460][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "testReturn148" (Operator FUNCTION_DECLARATION)
[00:29:42:462][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:465][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testReturn148" (Operator FUNCTION_DECLARATION)
[00:29:42:466][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testReturn148" = "function testReturn148 (int)" (Operator FUNCTION_DECLARATION)
[00:29:42:468][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testReturn148" (Operator VARIABLE_DECLARATION)
[00:29:42:470][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testReturn148" = "function testReturn148 (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:472][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:475][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:476][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator VARIABLE_DECLARATION)
[00:29:42:477][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "int" (Operator VARIABLE_DECLARATION)
[00:29:42:479][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator UNARY)
[00:29:42:480][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "int" (Operator UNARY)
[00:29:42:481][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testIf188" (Operator UNARY)
[00:29:42:482][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testIf188" = "int" (Operator UNARY)
[00:29:42:489][Debug](  TypeBuilder.cpp l.0055) Building type for expression "true" (Operator LITERAL)
[00:29:42:490][Info ](  TypeBuilder.cpp l.0057) Type built for expression "true" = "bool" (Operator LITERAL)
[00:29:42:491][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator VARIABLE_DECLARATION)
[00:29:42:492][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "bool" (Operator VARIABLE_DECLARATION)
[00:29:42:494][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator UNARY)
[00:29:42:497][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "bool" (Operator UNARY)
[00:29:42:498][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testIf188" (Operator UNARY)
[00:29:42:499][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testIf188" = "bool" (Operator UNARY)
[00:29:42:502][Debug](  TypeBuilder.cpp l.0055) Building type for expression "==" (Operator BINARY)
[00:29:42:503][Info ](  TypeBuilder.cpp l.0057) Type built for expression "==" = "bool" (Operator BINARY)
[00:29:42:504][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator VARIABLE_DECLARATION)
[00:29:42:507][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "bool" (Operator VARIABLE_DECLARATION)
[00:29:42:508][Debug](  TypeBuilder.cpp l.0023) Building type for variable "testIf188" (Operator UNARY)
[00:29:42:509][Info ](  TypeBuilder.cpp l.0025) Type built for variable "testIf188" = "bool" (Operator UNARY)
[00:29:42:511][Debug](  TypeBuilder.cpp l.0055) Building type for expression "testIf188" (Operator UNARY)
[00:29:42:512][Info ](  TypeBuilder.cpp l.0057) Type built for expression "testIf188" = "bool" (Operator UNARY)
[00:29:42:514][Debug](  TypeBuilder.cpp l.0055) Building type for expression "tt" (Operator LITERAL)
[00:29:42:517][Info ](  TypeBuilder.cpp l.0057) Type built for expression "tt" = "string" (Operator LITERAL)
[00:29:42:518][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator LITERAL)
[00:29:42:519][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "string" (Operator LITERAL)
[00:29:42:520][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:521][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:522][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:523][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:525][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str152" (Operator VARIABLE_DECLARATION)
[00:29:42:528][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str152" = "array (string)" (Operator VARIABLE_DECLARATION)
[00:29:42:532][Debug](  TypeBuilder.cpp l.0055) Building type for expression "tt" (Operator LITERAL)
[00:29:42:533][Info ](  TypeBuilder.cpp l.0057) Type built for expression "tt" = "string" (Operator LITERAL)
[00:29:42:534][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator LITERAL)
[00:29:42:535][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "string" (Operator LITERAL)
[00:29:42:538][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:539][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:540][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:541][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:542][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str159" (Operator VARIABLE_DECLARATION)
[00:29:42:543][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str159" = "array (string)" (Operator VARIABLE_DECLARATION)
[00:29:42:545][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str159" (Operator UNARY)
[00:29:42:548][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str159" = "array (string)" (Operator UNARY)
[00:29:42:549][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:42:550][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (string)" (Operator UNARY)
[00:29:42:551][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:552][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:553][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:554][Info ](  TypeBuilder.cpp l.0041) Type built for array = "string" (Operator ARRAY_USE)
[00:29:42:557][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:42:558][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "string" (Operator ARRAY_USE)
[00:29:42:561][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:42:562][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:42:563][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:42:564][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:42:567][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:569][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:570][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:571][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:573][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:574][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:575][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:579][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:580][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:581][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:582][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:42:583][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "array (int)" (Operator BINARY)
[00:29:42:584][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:585][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:587][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:590][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:593][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:42:594][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:42:596][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:42:597][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:42:599][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:600][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:602][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:603][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:604][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:605][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:606][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:607][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:611][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:613][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:614][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:615][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:617][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:42:618][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (int)" (Operator BINARY)
[00:29:42:621][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:622][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:623][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:624][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:628][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:42:631][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:42:632][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:42:633][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:42:634][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:636][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:637][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:638][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:640][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:642][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:643][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:644][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:646][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:647][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:648][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:42:651][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:42:652][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:653][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:654][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:655][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:657][Debug](  TypeBuilder.cpp l.0023) Building type for variable "range" (Operator VARIABLE_DECLARATION)
[00:29:42:658][Info ](  TypeBuilder.cpp l.0025) Type built for variable "range" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:662][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:663][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:664][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:665][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:666][Debug](  TypeBuilder.cpp l.0023) Building type for variable "range" (Operator UNARY)
[00:29:42:667][Info ](  TypeBuilder.cpp l.0025) Type built for variable "range" = "array (int)" (Operator UNARY)
[00:29:42:668][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:42:672][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (int)" (Operator BINARY)
[00:29:42:673][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:674][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:676][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:677][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:680][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:42:682][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:42:684][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:42:685][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:42:686][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:687][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:688][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:689][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:692][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:694][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:697][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:698][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:699][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:700][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:704][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:705][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:706][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:708][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:709][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:42:713][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:42:714][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:715][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:717][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:42:718][Info ](  TypeBuilder.cpp l.0057) Type built for expression "-" = "array (int)" (Operator BINARY)
[00:29:42:719][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:42:720][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:721][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator VARIABLE_AFFECTATION)
[00:29:42:724][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator VARIABLE_AFFECTATION)
[00:29:42:728][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:729][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:730][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:42:731][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:42:734][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:735][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:736][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:737][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:739][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2" (Operator LITERAL)
[00:29:42:740][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2" = "int" (Operator LITERAL)
[00:29:42:741][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:42:745][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:42:746][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:747][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:748][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:749][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:750][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:752][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator ARRAY_DECLARATION)
[00:29:42:755][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:756][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (array (int))" (Operator ARRAY_DECLARATION)
[00:29:42:758][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator VARIABLE_DECLARATION)
[00:29:42:759][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator VARIABLE_DECLARATION)
[00:29:42:760][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator UNARY)
[00:29:42:762][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator UNARY)
[00:29:42:765][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:42:766][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator UNARY)
[00:29:42:767][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:768][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:770][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:771][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:42:772][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:42:775][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_USE)
[00:29:42:776][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str167" (Operator UNARY)
[00:29:42:777][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str167" = "array (array (int))" (Operator UNARY)
[00:29:42:779][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:42:780][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator UNARY)
[00:29:42:781][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:782][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:783][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:786][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:42:787][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:788][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_USE)
[00:29:42:789][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:790][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:791][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:792][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:42:793][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:42:797][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator ARRAY_USE)
[00:29:42:801][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test131" (Operator PARAMETER_DECLARATION)
[00:29:42:801][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test131" = "array (string test131)" (Operator PARAMETER_DECLARATION)
[00:29:42:803][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi131" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:804][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi131" = "function titi131 (array (string test131) - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:806][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi131" (Operator FUNCTION_DECLARATION)
[00:29:42:809][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi131" = "function titi131 (array (string test131) - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:811][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi131" (Operator FUNCTION_DECLARATION)
[00:29:42:812][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi131" = "function titi131 (array (string test131) - void)" (Operator FUNCTION_DECLARATION)
[00:29:42:813][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi131" (Operator VARIABLE_DECLARATION)
[00:29:42:815][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi131" = "function titi131 (array (string test131) - void)" (Operator VARIABLE_DECLARATION)
[00:29:42:818][Debug](  TypeBuilder.cpp l.0055) Building type for expression "lol" (Operator LITERAL)
[00:29:42:819][Info ](  TypeBuilder.cpp l.0057) Type built for expression "lol" = "string" (Operator LITERAL)
[00:29:42:821][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator LITERAL)
[00:29:42:822][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "string" (Operator LITERAL)
[00:29:42:823][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:824][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:825][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:826][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:42:830][Debug](  TypeBuilder.cpp l.0023) Building type for variable "strArray131" (Operator VARIABLE_DECLARATION)
[00:29:42:832][Info ](  TypeBuilder.cpp l.0025) Type built for variable "strArray131" = "array (string)" (Operator VARIABLE_DECLARATION)
[00:29:42:833][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi131" (Operator UNARY)
[00:29:42:834][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi131" = "function titi131 (array (string test131) - void)" (Operator UNARY)
[00:29:42:835][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi131" (Operator UNARY)
[00:29:42:836][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi131" = "function titi131 (array (string test131) - void)" (Operator UNARY)
[00:29:42:840][Debug](  TypeBuilder.cpp l.0023) Building type for variable "strArray131" (Operator UNARY)
[00:29:42:841][Info ](  TypeBuilder.cpp l.0025) Type built for variable "strArray131" = "array (string)" (Operator UNARY)
[00:29:42:843][Debug](  TypeBuilder.cpp l.0055) Building type for expression "strArray131" (Operator UNARY)
[00:29:42:844][Info ](  TypeBuilder.cpp l.0057) Type built for expression "strArray131" = "array (string)" (Operator UNARY)
[00:29:42:845][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:847][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:42:850][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:42:851][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "void" (Operator FUNCTION_CALL)
[00:29:42:855][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var186" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:856][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var186" = "function var186 (var var186)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:857][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:860][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:862][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:863][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:864][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:866][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:867][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:868][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:871][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:872][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:873][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:42:875][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:42:876][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:877][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:878][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var186" (Operator FUNCTION_DECLARATION)
[00:29:42:882][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var186" = "function var186 (var var186)" (Operator FUNCTION_DECLARATION)
[00:29:42:884][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var186" (Operator FUNCTION_DECLARATION)
[00:29:42:885][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var186" = "function var186 (var var186)" (Operator FUNCTION_DECLARATION)
[00:29:42:887][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var186" (Operator VARIABLE_DECLARATION)
[00:29:42:888][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var186" = "function var186 (var var186)" (Operator VARIABLE_DECLARATION)
[00:29:42:892][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var186" (Operator UNARY)
[00:29:42:894][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var186" = "function var186 (var var186)" (Operator UNARY)
[00:29:42:896][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var186" (Operator UNARY)
[00:29:42:897][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var186" = "function var186 (var var186)" (Operator UNARY)
[00:29:42:899][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:902][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var186" (Operator FUNCTION_CALL)
[00:29:42:903][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:42:905][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:42:906][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:907][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:908][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:912][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:42:913][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_USE)
[00:29:42:914][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator ARRAY_USE)
[00:29:42:918][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var193" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:919][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var193" = "function var193 (var var193)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:920][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:923][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:924][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:926][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:927][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:928][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:930][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:932][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:934][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:935][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:936][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:42:937][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:42:938][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:939][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:943][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var193" (Operator FUNCTION_DECLARATION)
[00:29:42:945][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var193" = "function var193 (var var193)" (Operator FUNCTION_DECLARATION)
[00:29:42:947][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var193" (Operator FUNCTION_DECLARATION)
[00:29:42:948][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var193" = "function var193 (var var193)" (Operator FUNCTION_DECLARATION)
[00:29:42:949][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var193" (Operator VARIABLE_DECLARATION)
[00:29:42:950][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var193" = "function var193 (var var193)" (Operator VARIABLE_DECLARATION)
[00:29:42:954][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var193" (Operator UNARY)
[00:29:42:955][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var193" = "function var193 (var var193)" (Operator UNARY)
[00:29:42:957][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var193" (Operator UNARY)
[00:29:42:958][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var193" = "function var193 (var var193)" (Operator UNARY)
[00:29:42:959][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:42:960][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var193" (Operator FUNCTION_CALL)
[00:29:42:962][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:42:965][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:42:966][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:968][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:969][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:42:971][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:42:972][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:42:973][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:42:978][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var200" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:980][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var200" = "function var200 (var var200)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:42:981][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:42:982][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:42:983][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:42:986][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:987][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:42:988][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:42:990][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:42:991][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:42:992][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:42:994][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:42:997][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:42:998][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:42:999][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:000][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:002][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var200" (Operator FUNCTION_DECLARATION)
[00:29:43:004][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var200" = "function var200 (var var200)" (Operator FUNCTION_DECLARATION)
[00:29:43:005][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var200" (Operator FUNCTION_DECLARATION)
[00:29:43:008][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var200" = "function var200 (var var200)" (Operator FUNCTION_DECLARATION)
[00:29:43:010][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var200" (Operator VARIABLE_DECLARATION)
[00:29:43:011][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var200" = "function var200 (var var200)" (Operator VARIABLE_DECLARATION)
[00:29:43:013][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var200" (Operator UNARY)
[00:29:43:014][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var200" = "function var200 (var var200)" (Operator UNARY)
[00:29:43:015][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var200" (Operator UNARY)
[00:29:43:016][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var200" = "function var200 (var var200)" (Operator UNARY)
[00:29:43:020][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:021][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var200" (Operator FUNCTION_CALL)
[00:29:43:023][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:43:024][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:43:025][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:026][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:029][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:43:030][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:43:032][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:43:033][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:43:037][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var201" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:038][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var201" = "function var201 (var var201)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:042][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:044][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:045][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:046][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:047][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:048][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:052][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:053][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:055][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:056][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:057][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:43:059][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:43:060][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:063][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:064][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var201" (Operator FUNCTION_DECLARATION)
[00:29:43:065][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var201" = "function var201 (var var201)" (Operator FUNCTION_DECLARATION)
[00:29:43:067][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var201" (Operator FUNCTION_DECLARATION)
[00:29:43:068][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var201" = "function var201 (var var201)" (Operator FUNCTION_DECLARATION)
[00:29:43:070][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var201" (Operator VARIABLE_DECLARATION)
[00:29:43:073][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var201" = "function var201 (var var201)" (Operator VARIABLE_DECLARATION)
[00:29:43:075][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var201" (Operator UNARY)
[00:29:43:076][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var201" = "function var201 (var var201)" (Operator UNARY)
[00:29:43:078][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var201" (Operator UNARY)
[00:29:43:079][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var201" = "function var201 (var var201)" (Operator UNARY)
[00:29:43:080][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:083][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var201" (Operator FUNCTION_CALL)
[00:29:43:085][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:43:086][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:43:087][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:088][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:089][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:43:091][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:43:094][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:43:096][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:43:099][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var202" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:100][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var202" = "function var202 (var var202)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:102][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:104][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:105][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:107][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:108][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:110][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:111][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:114][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:116][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:117][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:118][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:43:119][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:43:120][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:121][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:125][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var202" (Operator FUNCTION_DECLARATION)
[00:29:43:127][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var202" = "function var202 (var var202)" (Operator FUNCTION_DECLARATION)
[00:29:43:128][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var202" (Operator FUNCTION_DECLARATION)
[00:29:43:129][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var202" = "function var202 (var var202)" (Operator FUNCTION_DECLARATION)
[00:29:43:130][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var202" (Operator VARIABLE_DECLARATION)
[00:29:43:131][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var202" = "function var202 (var var202)" (Operator VARIABLE_DECLARATION)
[00:29:43:135][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var202" (Operator UNARY)
[00:29:43:136][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var202" = "function var202 (var var202)" (Operator UNARY)
[00:29:43:138][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var202" (Operator UNARY)
[00:29:43:139][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var202" = "function var202 (var var202)" (Operator UNARY)
[00:29:43:141][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:142][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var202" (Operator FUNCTION_CALL)
[00:29:43:146][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:43:147][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:43:148][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:149][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:150][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:43:151][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:43:152][Debug](  TypeBuilder.cpp l.0055) Building type for expression "+" (Operator BINARY)
[00:29:43:153][Info ](  TypeBuilder.cpp l.0057) Type built for expression "+" = "int" (Operator BINARY)
[00:29:43:160][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:162][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:163][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:164][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:167][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:168][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:169][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:172][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:173][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:174][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:178][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:180][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:181][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:43:183][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:43:184][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:185][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:188][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var203" (Operator FUNCTION_DECLARATION)
[00:29:43:189][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var203" = "function var203 (var var203)" (Operator FUNCTION_DECLARATION)
[00:29:43:191][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var203" (Operator FUNCTION_DECLARATION)
[00:29:43:192][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var203" = "function var203 (var var203)" (Operator FUNCTION_DECLARATION)
[00:29:43:193][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator VARIABLE_DECLARATION)
[00:29:43:194][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator VARIABLE_DECLARATION)
[00:29:43:198][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator UNARY)
[00:29:43:199][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator UNARY)
[00:29:43:200][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var203" (Operator UNARY)
[00:29:43:201][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var203" = "function var203 (var var203)" (Operator UNARY)
[00:29:43:203][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:204][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var203" (Operator FUNCTION_CALL)
[00:29:43:206][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator FIELD_ACCESS)
[00:29:43:209][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator FIELD_ACCESS)
[00:29:43:211][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:212][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:213][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:43:214][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:43:215][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:43:216][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "int" (Operator BINARY)
[00:29:43:222][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:223][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:225][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:225][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:227][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:229][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:230][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:231][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:233][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:234][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:235][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:240][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:241][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:43:243][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "array (int)" (Operator UNARY)
[00:29:43:244][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:245][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:247][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "var203" (Operator FUNCTION_DECLARATION)
[00:29:43:248][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "var203" = "function var203 (var var203)" (Operator FUNCTION_DECLARATION)
[00:29:43:251][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var203" (Operator FUNCTION_DECLARATION)
[00:29:43:253][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var203" = "function var203 (var var203)" (Operator FUNCTION_DECLARATION)
[00:29:43:255][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator VARIABLE_DECLARATION)
[00:29:43:256][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator VARIABLE_DECLARATION)
[00:29:43:258][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var203" (Operator UNARY)
[00:29:43:259][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var203" = "function var203 (var var203)" (Operator UNARY)
[00:29:43:262][Debug](  TypeBuilder.cpp l.0055) Building type for expression "var203" (Operator UNARY)
[00:29:43:263][Info ](  TypeBuilder.cpp l.0057) Type built for expression "var203" = "function var203 (var var203)" (Operator UNARY)
[00:29:43:265][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:266][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var var203" (Operator FUNCTION_CALL)
[00:29:43:268][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:43:269][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator FIELD_ACCESS)
[00:29:43:272][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoVar" (Operator VARIABLE_DECLARATION)
[00:29:43:273][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoVar" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:275][Debug](  TypeBuilder.cpp l.0023) Building type for variable "totoVar" (Operator UNARY)
[00:29:43:276][Info ](  TypeBuilder.cpp l.0025) Type built for variable "totoVar" = "array (int)" (Operator UNARY)
[00:29:43:277][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:43:278][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator UNARY)
[00:29:43:279][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:280][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:284][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_USE)
[00:29:43:285][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator ARRAY_USE)
[00:29:43:286][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:43:287][Info ](  TypeBuilder.cpp l.0057) Type built for expression "*" = "int" (Operator BINARY)
[00:29:43:290][Debug](  TypeBuilder.cpp l.0055) Building type for expression "123" (Operator LITERAL)
[00:29:43:291][Info ](  TypeBuilder.cpp l.0057) Type built for expression "123" = "int" (Operator LITERAL)
[00:29:43:294][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var187" (Operator VARIABLE_DECLARATION)
[00:29:43:295][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var187" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:296][Debug](  TypeBuilder.cpp l.0023) Building type for variable "var187" (Operator UNARY)
[00:29:43:297][Info ](  TypeBuilder.cpp l.0025) Type built for variable "var187" = "int" (Operator UNARY)
[00:29:43:299][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator UNARY)
[00:29:43:300][Info ](  TypeBuilder.cpp l.0041) Type built for array = "int" (Operator UNARY)
[00:29:43:304][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:305][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:306][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:43:307][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:43:309][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:310][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:311][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:312][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:317][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str242" (Operator VARIABLE_DECLARATION)
[00:29:43:318][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str242" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:320][Debug](  TypeBuilder.cpp l.0023) Building type for variable "str242" (Operator UNARY)
[00:29:43:321][Info ](  TypeBuilder.cpp l.0025) Type built for variable "str242" = "array (int)" (Operator UNARY)
[00:29:43:322][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:323][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:326][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:328][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:330][Debug](  TypeBuilder.cpp l.0055) Building type for expression "*" (Operator BINARY)
[00:29:43:333][Debug](  TypeBuilder.cpp l.0055) Building type for expression "tt" (Operator LITERAL)
[00:29:43:335][Info ](  TypeBuilder.cpp l.0057) Type built for expression "tt" = "string" (Operator LITERAL)
[00:29:43:336][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator LITERAL)
[00:29:43:338][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "string" (Operator LITERAL)
[00:29:43:339][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:340][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:43:341][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:342][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (string)" (Operator ARRAY_DECLARATION)
[00:29:43:346][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:43:348][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:43:349][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:43:350][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:43:351][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:43:352][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:43:353][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:354][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:357][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:358][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:360][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:361][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:362][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:363][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:364][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:367][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:368][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:43:373][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14" (Operator LITERAL)
[00:29:43:373][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14" = "int" (Operator LITERAL)
[00:29:43:375][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25" (Operator LITERAL)
[00:29:43:377][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25" = "int" (Operator LITERAL)
[00:29:43:379][Debug](  TypeBuilder.cpp l.0055) Building type for expression "3" (Operator LITERAL)
[00:29:43:380][Info ](  TypeBuilder.cpp l.0057) Type built for expression "3" = "int" (Operator LITERAL)
[00:29:43:381][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:382][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:383][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:384][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:385][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:388][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator VARIABLE_DECLARATION)
[00:29:43:390][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:391][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:392][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:393][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (int)" (Operator UNARY)
[00:29:43:395][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:43:400][Debug](  TypeBuilder.cpp l.0055) Building type for expression "120" (Operator LITERAL)
[00:29:43:401][Info ](  TypeBuilder.cpp l.0057) Type built for expression "120" = "int" (Operator LITERAL)
[00:29:43:402][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator VARIABLE_DECLARATION)
[00:29:43:403][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:404][Debug](  TypeBuilder.cpp l.0023) Building type for variable "i" (Operator UNARY)
[00:29:43:405][Info ](  TypeBuilder.cpp l.0025) Type built for variable "i" = "int" (Operator UNARY)
[00:29:43:409][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:410][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:414][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:415][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi" = "function titi (void)" (Operator FUNCTION_DECLARATION)
[00:29:43:416][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:417][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "function titi (void)" (Operator FUNCTION_DECLARATION)
[00:29:43:421][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:43:422][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator VARIABLE_DECLARATION)
[00:29:43:423][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:43:424][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator UNARY)
[00:29:43:426][Debug](  TypeBuilder.cpp l.0055) Building type for expression "9" (Operator LITERAL)
[00:29:43:427][Info ](  TypeBuilder.cpp l.0057) Type built for expression "9" = "int" (Operator LITERAL)
[00:29:43:428][Debug](  TypeBuilder.cpp l.0023) Building type for variable "" (Operator VARIABLE_AFFECTATION)
[00:29:43:431][Info ](  TypeBuilder.cpp l.0025) Type built for variable "" = "function titi (void)" (Operator VARIABLE_AFFECTATION)
[00:29:43:435][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:436][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:438][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:441][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi" = "function titi (void)" (Operator FUNCTION_DECLARATION)
[00:29:43:442][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:443][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "function titi (void)" (Operator FUNCTION_DECLARATION)
[00:29:43:445][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:43:446][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator VARIABLE_DECLARATION)
[00:29:43:447][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:43:448][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (void)" (Operator UNARY)
[00:29:43:455][Debug](  TypeBuilder.cpp l.0023) Building type for variable "test" (Operator PARAMETER_DECLARATION)
[00:29:43:456][Info ](  TypeBuilder.cpp l.0025) Type built for variable "test" = "function test" (Operator PARAMETER_DECLARATION)
[00:29:43:457][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:459][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (function test - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:460][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:463][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "titi" = "function titi (function test - void)" (Operator FUNCTION_DECLARATION)
[00:29:43:464][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator FUNCTION_DECLARATION)
[00:29:43:465][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "function titi (function test - void)" (Operator FUNCTION_DECLARATION)
[00:29:43:467][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator VARIABLE_DECLARATION)
[00:29:43:468][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (function test - void)" (Operator VARIABLE_DECLARATION)
[00:29:43:469][Debug](  TypeBuilder.cpp l.0023) Building type for variable "titi" (Operator UNARY)
[00:29:43:470][Info ](  TypeBuilder.cpp l.0025) Type built for variable "titi" = "function titi (function test - void)" (Operator UNARY)
[00:29:43:474][Debug](  TypeBuilder.cpp l.0055) Building type for expression "titi" (Operator UNARY)
[00:29:43:475][Info ](  TypeBuilder.cpp l.0057) Type built for expression "titi" = "function titi (function test - void)" (Operator UNARY)
[00:29:43:477][Debug](  TypeBuilder.cpp l.0055) Building type for expression "23" (Operator LITERAL)
[00:29:43:478][Info ](  TypeBuilder.cpp l.0057) Type built for expression "23" = "int" (Operator LITERAL)
[00:29:43:479][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:481][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:43:487][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:43:489][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:43:490][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:492][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:494][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator UNARY)
[00:29:43:496][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator UNARY)
[00:29:43:497][Debug](  TypeBuilder.cpp l.0055) Building type for expression "nom" (Operator UNARY)
[00:29:43:498][Info ](  TypeBuilder.cpp l.0057) Type built for expression "nom" = "string nom" (Operator UNARY)
[00:29:43:499][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator VARIABLE_DECLARATION)
[00:29:43:500][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator VARIABLE_DECLARATION)
[00:29:43:501][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Joueur" (Operator FUNCTION_DECLARATION)
[00:29:43:503][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_DECLARATION)
[00:29:43:507][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur" (Operator FUNCTION_DECLARATION)
[00:29:43:508][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_DECLARATION)
[00:29:43:510][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator VARIABLE_DECLARATION)
[00:29:43:512][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator VARIABLE_DECLARATION)
[00:29:43:514][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator UNARY)
[00:29:43:517][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:519][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur" (Operator UNARY)
[00:29:43:520][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:521][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur 1" (Operator LITERAL)
[00:29:43:522][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur 1" = "string" (Operator LITERAL)
[00:29:43:523][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:525][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:529][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:43:530][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:532][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:43:533][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur" (Operator VARIABLE_DECLARATION)
[00:29:43:534][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:43:535][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur" (Operator UNARY)
[00:29:43:538][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:43:542][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:43:542][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:43:544][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:43:545][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:43:546][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:549][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:553][Debug](  TypeBuilder.cpp l.0055) Building type for expression "14.0" (Operator LITERAL)
[00:29:43:553][Info ](  TypeBuilder.cpp l.0057) Type built for expression "14.0" = "float" (Operator LITERAL)
[00:29:43:555][Debug](  TypeBuilder.cpp l.0055) Building type for expression "25.0" (Operator LITERAL)
[00:29:43:556][Info ](  TypeBuilder.cpp l.0057) Type built for expression "25.0" = "float" (Operator LITERAL)
[00:29:43:558][Debug](  TypeBuilder.cpp l.0055) Building type for expression "13.0" (Operator LITERAL)
[00:29:43:559][Info ](  TypeBuilder.cpp l.0057) Type built for expression "13.0" = "float" (Operator LITERAL)
[00:29:43:561][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:43:563][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:43:564][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:568][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:43:574][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:575][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:43:578][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:579][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator VARIABLE_DECLARATION)
[00:29:43:581][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:585][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:43:586][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:587][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "array (float)" (Operator UNARY)
[00:29:43:589][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1.0" (Operator LITERAL)
[00:29:43:590][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1.0" = "float" (Operator LITERAL)
[00:29:43:591][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:43:592][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:43:596][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:597][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:43:598][Debug](  TypeBuilder.cpp l.0055) Building type for expression "-" (Operator BINARY)
[00:29:43:602][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:603][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:606][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:43:607][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:43:608][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:609][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:610][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:612][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (int)" (Operator ARRAY_DECLARATION)
[00:29:43:613][Debug](  TypeBuilder.cpp l.0055) Building type for expression "2.0" (Operator LITERAL)
[00:29:43:616][Info ](  TypeBuilder.cpp l.0057) Type built for expression "2.0" = "float" (Operator LITERAL)
[00:29:43:618][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:620][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:43:621][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator ARRAY_DECLARATION)
[00:29:43:622][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "array (float)" (Operator ARRAY_DECLARATION)
[00:29:43:623][Debug](  TypeBuilder.cpp l.0039) Building type array (Operator ARRAY_DECLARATION)
[00:29:43:626][Info ](  TypeBuilder.cpp l.0041) Type built for array = "array (array (int))" (Operator ARRAY_DECLARATION)
[00:29:43:633][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator PARAMETER_DECLARATION)
[00:29:43:635][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator PARAMETER_DECLARATION)
[00:29:43:637][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:638][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:640][Debug](  TypeBuilder.cpp l.0055) Building type for expression "10" (Operator LITERAL)
[00:29:43:641][Info ](  TypeBuilder.cpp l.0057) Type built for expression "10" = "int" (Operator LITERAL)
[00:29:43:642][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator VARIABLE_DECLARATION)
[00:29:43:643][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:647][Debug](  TypeBuilder.cpp l.0023) Building type for variable "cible" (Operator PARAMETER_DECLARATION)
[00:29:43:648][Info ](  TypeBuilder.cpp l.0025) Type built for variable "cible" = "var Joueur" (Operator PARAMETER_DECLARATION)
[00:29:43:650][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:651][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Joueur - void)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:652][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:43:654][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "attaquer" = "function attaquer (var Joueur - void)" (Operator FUNCTION_DECLARATION)
[00:29:43:657][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator FUNCTION_DECLARATION)
[00:29:43:659][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var Joueur - void)" (Operator FUNCTION_DECLARATION)
[00:29:43:660][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:43:662][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Joueur - void)" (Operator VARIABLE_DECLARATION)
[00:29:43:663][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator UNARY)
[00:29:43:664][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator UNARY)
[00:29:43:665][Debug](  TypeBuilder.cpp l.0055) Building type for expression "nom" (Operator UNARY)
[00:29:43:668][Info ](  TypeBuilder.cpp l.0057) Type built for expression "nom" = "string nom" (Operator UNARY)
[00:29:43:669][Debug](  TypeBuilder.cpp l.0023) Building type for variable "nom" (Operator VARIABLE_DECLARATION)
[00:29:43:671][Info ](  TypeBuilder.cpp l.0025) Type built for variable "nom" = "string nom" (Operator VARIABLE_DECLARATION)
[00:29:43:672][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator UNARY)
[00:29:43:673][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator UNARY)
[00:29:43:674][Debug](  TypeBuilder.cpp l.0055) Building type for expression "puissance" (Operator UNARY)
[00:29:43:676][Info ](  TypeBuilder.cpp l.0057) Type built for expression "puissance" = "int" (Operator UNARY)
[00:29:43:680][Debug](  TypeBuilder.cpp l.0023) Building type for variable "puissance" (Operator VARIABLE_DECLARATION)
[00:29:43:681][Info ](  TypeBuilder.cpp l.0025) Type built for variable "puissance" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:682][Debug](  TypeBuilder.cpp l.0055) Building type for expression "100" (Operator LITERAL)
[00:29:43:683][Info ](  TypeBuilder.cpp l.0057) Type built for expression "100" = "int" (Operator LITERAL)
[00:29:43:684][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pv" (Operator VARIABLE_DECLARATION)
[00:29:43:685][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pv" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:687][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator UNARY)
[00:29:43:690][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Joueur - void)" (Operator UNARY)
[00:29:43:691][Debug](  TypeBuilder.cpp l.0055) Building type for expression "attaquer" (Operator UNARY)
[00:29:43:692][Info ](  TypeBuilder.cpp l.0057) Type built for expression "attaquer" = "function attaquer (var Joueur - void)" (Operator UNARY)
[00:29:43:693][Debug](  TypeBuilder.cpp l.0023) Building type for variable "attaquer" (Operator VARIABLE_DECLARATION)
[00:29:43:695][Info ](  TypeBuilder.cpp l.0025) Type built for variable "attaquer" = "function attaquer (var Joueur - void)" (Operator VARIABLE_DECLARATION)
[00:29:43:696][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Joueur" (Operator FUNCTION_DECLARATION)
[00:29:43:697][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_DECLARATION)
[00:29:43:701][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur" (Operator FUNCTION_DECLARATION)
[00:29:43:703][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur" = "function Joueur (string nom - var Joueur)" (Operator FUNCTION_DECLARATION)
[00:29:43:704][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator VARIABLE_DECLARATION)
[00:29:43:706][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator VARIABLE_DECLARATION)
[00:29:43:707][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator UNARY)
[00:29:43:708][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:712][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur" (Operator UNARY)
[00:29:43:713][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:715][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur1" (Operator LITERAL)
[00:29:43:716][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur1" = "string" (Operator LITERAL)
[00:29:43:717][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:718][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:722][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:43:724][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:725][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator VARIABLE_DECLARATION)
[00:29:43:727][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur" (Operator VARIABLE_DECLARATION)
[00:29:43:729][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Joueur" (Operator UNARY)
[00:29:43:732][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:734][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Joueur" (Operator UNARY)
[00:29:43:735][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Joueur" = "function Joueur (string nom - var Joueur)" (Operator UNARY)
[00:29:43:736][Debug](  TypeBuilder.cpp l.0055) Building type for expression "joueur2" (Operator LITERAL)
[00:29:43:737][Info ](  TypeBuilder.cpp l.0057) Type built for expression "joueur2" = "string" (Operator LITERAL)
[00:29:43:738][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:739][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:743][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:43:744][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Joueur" (Operator FUNCTION_CALL)
[00:29:43:746][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur2" (Operator VARIABLE_DECLARATION)
[00:29:43:747][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur2" = "var Joueur" (Operator VARIABLE_DECLARATION)
[00:29:43:749][Debug](  TypeBuilder.cpp l.0055) Building type for expression "1" (Operator LITERAL)
[00:29:43:750][Info ](  TypeBuilder.cpp l.0057) Type built for expression "1" = "int" (Operator LITERAL)
[00:29:43:753][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator VARIABLE_DECLARATION)
[00:29:43:754][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:756][Debug](  TypeBuilder.cpp l.0023) Building type for variable "joueur1" (Operator UNARY)
[00:29:43:757][Info ](  TypeBuilder.cpp l.0025) Type built for variable "joueur1" = "var Joueur" (Operator UNARY)
[00:29:43:758][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:43:759][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "function attaquer (var Joueur - void)" (Operator FIELD_ACCESS)
[00:29:43:760][Debug](  TypeBuilder.cpp l.0023) Building type for variable "toto" (Operator UNARY)
[00:29:43:764][Info ](  TypeBuilder.cpp l.0025) Type built for variable "toto" = "int" (Operator UNARY)
[00:29:43:765][Debug](  TypeBuilder.cpp l.0055) Building type for expression "toto" (Operator UNARY)
[00:29:43:766][Info ](  TypeBuilder.cpp l.0057) Type built for expression "toto" = "int" (Operator UNARY)
[00:29:43:767][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:768][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "void" (Operator FUNCTION_CALL)
[00:29:43:811][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Factory" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:813][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Factory" = "function Factory (var Factory)" (Operator FUNCTION_PROTOTYPE_DECLARATION)
[00:29:43:814][Debug](  TypeBuilder.cpp l.0055) Building type for expression "0" (Operator LITERAL)
[00:29:43:815][Info ](  TypeBuilder.cpp l.0057) Type built for expression "0" = "int" (Operator LITERAL)
[00:29:43:816][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pdv" (Operator VARIABLE_DECLARATION)
[00:29:43:817][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pdv" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:819][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pdv" (Operator UNARY)
[00:29:43:820][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pdv" = "int" (Operator UNARY)
[00:29:43:823][Debug](  TypeBuilder.cpp l.0055) Building type for expression "pdv" (Operator UNARY)
[00:29:43:824][Info ](  TypeBuilder.cpp l.0057) Type built for expression "pdv" = "int" (Operator UNARY)
[00:29:43:825][Debug](  TypeBuilder.cpp l.0023) Building type for variable "pdv" (Operator VARIABLE_DECLARATION)
[00:29:43:827][Info ](  TypeBuilder.cpp l.0025) Type built for variable "pdv" = "int" (Operator VARIABLE_DECLARATION)
[00:29:43:828][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "Factory" (Operator FUNCTION_DECLARATION)
[00:29:43:830][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "Factory" = "function Factory (var Factory)" (Operator FUNCTION_DECLARATION)
[00:29:43:831][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Factory" (Operator FUNCTION_DECLARATION)
[00:29:43:835][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Factory" = "function Factory (var Factory)" (Operator FUNCTION_DECLARATION)
[00:29:43:837][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Factory" (Operator VARIABLE_DECLARATION)
[00:29:43:838][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Factory" = "function Factory (var Factory)" (Operator VARIABLE_DECLARATION)
[00:29:43:839][Debug](  TypeBuilder.cpp l.0023) Building type for variable "Factory" (Operator UNARY)
[00:29:43:840][Info ](  TypeBuilder.cpp l.0025) Type built for variable "Factory" = "function Factory (var Factory)" (Operator UNARY)
[00:29:43:843][Debug](  TypeBuilder.cpp l.0055) Building type for expression "Factory" (Operator UNARY)
[00:29:43:846][Info ](  TypeBuilder.cpp l.0057) Type built for expression "Factory" = "function Factory (var Factory)" (Operator UNARY)
[00:29:43:847][Debug](  TypeBuilder.cpp l.0064) Building type for function parameter declaration / call "" (Operator FUNCTION_CALL)
[00:29:43:849][Info ](  TypeBuilder.cpp l.0066) Type built for function parameter declaration / call "" = "var Factory" (Operator FUNCTION_CALL)
[00:29:43:851][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FUNCTION_CALL)
[00:29:43:852][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "var Factory" (Operator FUNCTION_CALL)
[00:29:43:853][Debug](  TypeBuilder.cpp l.0023) Building type for variable "obj" (Operator VARIABLE_DECLARATION)
[00:29:43:856][Info ](  TypeBuilder.cpp l.0025) Type built for variable "obj" = "var Factory" (Operator VARIABLE_DECLARATION)
[00:29:43:858][Debug](  TypeBuilder.cpp l.0023) Building type for variable "obj" (Operator UNARY)
[00:29:43:859][Info ](  TypeBuilder.cpp l.0025) Type built for variable "obj" = "var Factory" (Operator UNARY)
[00:29:43:860][Debug](  TypeBuilder.cpp l.0055) Building type for expression "" (Operator FIELD_ACCESS)
[00:29:43:861][Info ](  TypeBuilder.cpp l.0057) Type built for expression "" = "int" (Operator FIELD_ACCESS)
